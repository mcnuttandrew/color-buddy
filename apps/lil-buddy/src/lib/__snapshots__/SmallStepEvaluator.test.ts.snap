// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Agg Test 1`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLPredicate {
      "inducedVariables": {},
      "left": LLAggregate {
        "children": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "aggregate",
        "type": "count",
      },
      "nodeType": "predicate",
      "right": LLNumber {
        "nodeType": "number",
        "value": 11,
      },
      "threshold": undefined,
      "type": "<",
    },
  },
  LLPredicate {
    "inducedVariables": {},
    "left": LLNumber {
      "nodeType": "number",
      "value": 2,
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 11,
    },
    "threshold": undefined,
    "type": "<",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Even distribution 1`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLConjunction {
      "children": [
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLAggregate {
              "children": LLMap {
                "children": LLMap {
                  "children": LLVariable {
                    "nodeType": "variable",
                    "value": "colors",
                  },
                  "func": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "x",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "lch.h",
                  },
                  "nodeType": "map",
                  "type": "sort",
                  "varb": "x",
                },
                "func": " ",
                "nodeType": "map",
                "type": "speed",
                "varb": " ",
              },
              "nodeType": "aggregate",
              "type": "std",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 10,
            },
            "threshold": undefined,
            "type": "<",
          },
        },
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLAggregate {
              "children": LLMap {
                "children": LLMap {
                  "children": LLVariable {
                    "nodeType": "variable",
                    "value": "colors",
                  },
                  "func": LLNumberOp {
                    "left": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "x",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "lch.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 360,
                    },
                    "type": "%",
                  },
                  "nodeType": "map",
                  "type": "sort",
                  "varb": "x",
                },
                "func": " ",
                "nodeType": "map",
                "type": "speed",
                "varb": " ",
              },
              "nodeType": "aggregate",
              "type": "std",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 10,
            },
            "threshold": undefined,
            "type": "<",
          },
        },
      ],
      "inducedVariables": {},
      "nodeType": "conjunction",
      "type": "or",
    },
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLMap {
            "children": LLValueArray {
              "children": [
                LLNumber {
                  "nodeType": "number",
                  "value": 40.85764559535954,
                },
                LLNumber {
                  "nodeType": "number",
                  "value": 134.38378630956015,
                },
              ],
              "nodeType": "array",
            },
            "func": " ",
            "inducedVariables": {},
            "nodeType": "map",
            "type": "speed",
            "varb": " ",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "std",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLNumberOp {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lch.h",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180,
                    },
                    "type": "+",
                  },
                  "nodeType": "numberOp",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 360,
                  },
                  "type": "%",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "func": " ",
              "nodeType": "map",
              "type": "speed",
              "varb": " ",
            },
            "nodeType": "aggregate",
            "type": "std",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 10,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLValueArray {
            "children": [
              LLNumber {
                "nodeType": "number",
                "value": 93.52614071420061,
              },
            ],
            "nodeType": "array",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "std",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLNumberOp {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lch.h",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180,
                    },
                    "type": "+",
                  },
                  "nodeType": "numberOp",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 360,
                  },
                  "type": "%",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "func": " ",
              "nodeType": "map",
              "type": "speed",
              "varb": " ",
            },
            "nodeType": "aggregate",
            "type": "std",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 10,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLNumber {
          "nodeType": "number",
          "value": 0,
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLNumberOp {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lch.h",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180,
                    },
                    "type": "+",
                  },
                  "nodeType": "numberOp",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 360,
                  },
                  "type": "%",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "func": " ",
              "nodeType": "map",
              "type": "speed",
              "varb": " ",
            },
            "nodeType": "aggregate",
            "type": "std",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 10,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLNumberOp {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lch.h",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180,
                    },
                    "type": "+",
                  },
                  "nodeType": "numberOp",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 360,
                  },
                  "type": "%",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "func": " ",
              "nodeType": "map",
              "type": "speed",
              "varb": " ",
            },
            "nodeType": "aggregate",
            "type": "std",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 10,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLMap {
            "children": LLValueArray {
              "children": [
                LLNumber {
                  "nodeType": "number",
                  "value": 220.85764559535954,
                },
                LLNumber {
                  "nodeType": "number",
                  "value": 314.38378630956015,
                },
              ],
              "nodeType": "array",
            },
            "func": " ",
            "inducedVariables": {},
            "nodeType": "map",
            "type": "speed",
            "varb": " ",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "std",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLValueArray {
            "children": [
              LLNumber {
                "nodeType": "number",
                "value": 93.52614071420061,
              },
            ],
            "nodeType": "array",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "std",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLNumber {
          "nodeType": "number",
          "value": 0,
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLBool {
    "inducedVariables": {},
    "nodeType": "bool",
    "value": true,
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Fair Test 1`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLPredicate {
      "inducedVariables": {},
      "left": LLAggregate {
        "children": LLMap {
          "children": LLVariable {
            "nodeType": "variable",
            "value": "colors",
          },
          "func": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "x",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "lch.l",
          },
          "nodeType": "map",
          "type": "sort",
          "varb": "x",
        },
        "nodeType": "aggregate",
        "type": "extent",
      },
      "nodeType": "predicate",
      "right": LLNumber {
        "nodeType": "number",
        "value": 50,
      },
      "threshold": undefined,
      "type": "<",
    },
  },
  LLPredicate {
    "inducedVariables": {},
    "left": LLAggregate {
      "children": LLValueArray {
        "children": [
          LLNumber {
            "nodeType": "number",
            "value": 46.278,
          },
          LLNumber {
            "nodeType": "number",
            "value": 54.291,
          },
        ],
        "nodeType": "array",
      },
      "inducedVariables": {},
      "nodeType": "aggregate",
      "type": "extent",
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 50,
    },
    "threshold": undefined,
    "type": "<",
  },
  LLPredicate {
    "inducedVariables": {},
    "left": LLNumber {
      "nodeType": "number",
      "value": 8.012999999999998,
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 50,
    },
    "threshold": undefined,
    "type": "<",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Nested Quantifiers Test 1`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "deuteranopia",
                    },
                    "type": "cvdSim",
                  },
                  "nodeType": "predicate",
                  "right": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "b",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "deuteranopia",
                    },
                    "type": "cvdSim",
                  },
                  "threshold": 9,
                  "type": "similar",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "not",
          },
        },
        "type": "all",
        "varbs": [
          "b",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(a)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(b)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "deuteranopia",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "deuteranopia",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#9b9b00",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 62.46057567197121,
                              "a": -10.877327253457691,
                              "b": 64.50055351868562,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "deuteranopia",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#9b9b00",
                          "inducedVariables": {
                            "a": "#f00",
                            "b": "#008000",
                            "index(a)": 0,
                            "index(b)": 1,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 62.46057567197121,
                              "a": -10.877327253457691,
                              "b": 64.50055351868562,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#6a6a16",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 43.76722055724194,
                              "a": -7.7956612798162075,
                              "b": 43.56344576087999,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "deuteranopia",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "deuteranopia",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#6a6a16",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 43.76722055724194,
                              "a": -7.7956612798162075,
                              "b": 43.56344576087999,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "deuteranopia",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#6a6a16",
                          "inducedVariables": {
                            "a": "#008000",
                            "b": "#f00",
                            "index(a)": 1,
                            "index(b)": 0,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 43.76722055724194,
                              "a": -7.7956612798162075,
                              "b": 43.56344576087999,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#9b9b00",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 62.46057567197121,
                              "a": -10.877327253457691,
                              "b": 64.50055351868562,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 1`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLPairFunction {
            "left": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "pairFunction",
            "params": {
              "algorithm": "WCAG21",
            },
            "right": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "type": "contrast",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 3,
          },
          "threshold": undefined,
          "type": ">",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "algorithm": "WCAG21",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "background",
              },
              "type": "contrast",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 3,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLNumber {
              "nodeType": "number",
              "value": 3.997818803850546,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 3,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "algorithm": "WCAG21",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "background",
              },
              "type": "contrast",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 3,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLNumber {
              "nodeType": "number",
              "value": 5.137518325903408,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 3,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 2`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLPairFunction {
            "left": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "pairFunction",
            "params": {
              "algorithm": "WCAG21",
            },
            "right": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "type": "contrast",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 4.5,
          },
          "threshold": undefined,
          "type": ">",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": LLValueFunction {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "a",
        },
        "nodeType": "valueFunction",
        "params": {
          "value": "text",
        },
        "type": "isTag",
      },
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "didEval": true,
        "result": "WHERE SKIP",
      },
      {
        "color": "#008000",
        "didEval": true,
        "result": "WHERE SKIP",
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 3`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLPairFunction {
            "left": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "pairFunction",
            "params": {
              "algorithm": "WCAG21",
            },
            "right": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "type": "contrast",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 7,
          },
          "threshold": undefined,
          "type": ">",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": LLValueFunction {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "a",
        },
        "nodeType": "valueFunction",
        "params": {
          "value": "text",
        },
        "type": "isTag",
      },
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "didEval": true,
        "result": "WHERE SKIP",
      },
      {
        "color": "#008000",
        "didEval": true,
        "result": "WHERE SKIP",
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 4`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLPairFunction {
            "left": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "pairFunction",
            "params": {
              "algorithm": "WCAG21",
            },
            "right": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "type": "contrast",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 4.5,
          },
          "threshold": undefined,
          "type": ">",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "algorithm": "WCAG21",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "background",
              },
              "type": "contrast",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 4.5,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLNumber {
              "nodeType": "number",
              "value": 3.997818803850546,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 4.5,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "algorithm": "WCAG21",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "background",
              },
              "type": "contrast",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 4.5,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLNumber {
              "nodeType": "number",
              "value": 5.137518325903408,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 4.5,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 5`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLPairFunction {
            "left": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "pairFunction",
            "params": {
              "algorithm": "WCAG21",
            },
            "right": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "type": "contrast",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 7,
          },
          "threshold": undefined,
          "type": ">",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "algorithm": "WCAG21",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "background",
              },
              "type": "contrast",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 7,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLNumber {
              "nodeType": "number",
              "value": 3.997818803850546,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 7,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "algorithm": "WCAG21",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "background",
              },
              "type": "contrast",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 7,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLNumber {
              "nodeType": "number",
              "value": 5.137518325903408,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 7,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 6`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 70,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "not",
        },
      },
      "type": "all",
      "varbs": [
        "c",
      ],
      "where": LLPredicate {
        "left": LLValueFunction {
          "input": LLVariable {
            "nodeType": "variable",
            "value": "c",
          },
          "nodeType": "valueFunction",
          "params": {},
          "type": "hsl.l",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 70,
        },
        "threshold": undefined,
        "type": ">",
      },
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "didEval": true,
        "result": "WHERE SKIP",
      },
      {
        "color": "#008000",
        "didEval": true,
        "result": "WHERE SKIP",
      },
    ],
    "varb": "c",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 7`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 70,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "not",
        },
      },
      "type": "all",
      "varbs": [
        "c",
      ],
      "where": LLPredicate {
        "left": LLValueFunction {
          "input": LLVariable {
            "nodeType": "variable",
            "value": "c",
          },
          "nodeType": "valueFunction",
          "params": {},
          "type": "hsl.l",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 70,
        },
        "threshold": undefined,
        "type": ">",
      },
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "didEval": true,
        "result": "WHERE SKIP",
      },
      {
        "color": "#008000",
        "didEval": true,
        "result": "WHERE SKIP",
      },
    ],
    "varb": "c",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 8`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 70,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "not",
        },
      },
      "type": "all",
      "varbs": [
        "c",
      ],
      "where": LLPredicate {
        "left": LLValueFunction {
          "input": LLVariable {
            "nodeType": "variable",
            "value": "c",
          },
          "nodeType": "valueFunction",
          "params": {},
          "type": "hsl.l",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 70,
        },
        "threshold": undefined,
        "type": ">",
      },
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "didEval": true,
        "result": "WHERE SKIP",
      },
      {
        "color": "#008000",
        "didEval": true,
        "result": "WHERE SKIP",
      },
    ],
    "varb": "c",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 9`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLVariable {
                  "nodeType": "variable",
                  "value": "c",
                },
                "nodeType": "predicate",
                "right": LLColor {
                  "constructorString": "lightblue",
                  "nodeType": "color",
                  "value": CIELAB {
                    "channels": {
                      "L": 83.61154775498775,
                      "a": -12.226212744355758,
                      "b": -11.782128305001072,
                    },
                    "spaceName": "lab",
                    "tags": [],
                  },
                },
                "threshold": 20,
                "type": "similar",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLVariable {
                  "nodeType": "variable",
                  "value": "c",
                },
                "nodeType": "predicate",
                "right": LLColor {
                  "constructorString": "beige",
                  "nodeType": "color",
                  "value": CIELAB {
                    "channels": {
                      "L": 96.04370417063645,
                      "a": -3.1148024941788366,
                      "b": 12.094696307241692,
                    },
                    "spaceName": "lab",
                    "tags": [],
                  },
                },
                "threshold": 20,
                "type": "similar",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLVariable {
                  "nodeType": "variable",
                  "value": "c",
                },
                "nodeType": "predicate",
                "right": LLColor {
                  "constructorString": "gray",
                  "nodeType": "color",
                  "value": CIELAB {
                    "channels": {
                      "L": 53.58501345216902,
                      "a": 0,
                      "b": -2.220446049250313e-14,
                    },
                    "spaceName": "lab",
                    "tags": [],
                  },
                },
                "threshold": 20,
                "type": "similar",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "or",
        },
      },
      "type": "exist",
      "varbs": [
        "c",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "exist",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "lightblue",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 83.61154775498775,
                        "a": -12.226212744355758,
                        "b": -11.782128305001072,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "beige",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 96.04370417063645,
                        "a": -3.1148024941788366,
                        "b": 12.094696307241692,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "gray",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 53.58501345216902,
                        "a": 0,
                        "b": -2.220446049250313e-14,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "beige",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 96.04370417063645,
                        "a": -3.1148024941788366,
                        "b": 12.094696307241692,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "gray",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 53.58501345216902,
                        "a": 0,
                        "b": -2.220446049250313e-14,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {
                  "c": "#f00",
                  "index(c)": 0,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "gray",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 53.58501345216902,
                        "a": 0,
                        "b": -2.220446049250313e-14,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {
                  "c": "#f00",
                  "index(c)": 0,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLBool {
                "inducedVariables": {
                  "c": "#f00",
                  "index(c)": 0,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLBool {
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "bool",
            "value": false,
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "lightblue",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 83.61154775498775,
                        "a": -12.226212744355758,
                        "b": -11.782128305001072,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "beige",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 96.04370417063645,
                        "a": -3.1148024941788366,
                        "b": 12.094696307241692,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "gray",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 53.58501345216902,
                        "a": 0,
                        "b": -2.220446049250313e-14,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "beige",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 96.04370417063645,
                        "a": -3.1148024941788366,
                        "b": 12.094696307241692,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "gray",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 53.58501345216902,
                        "a": 0,
                        "b": -2.220446049250313e-14,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {
                  "c": "#008000",
                  "index(c)": 1,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLVariable {
                    "nodeType": "variable",
                    "value": "c",
                  },
                  "nodeType": "predicate",
                  "right": LLColor {
                    "constructorString": "gray",
                    "nodeType": "color",
                    "value": CIELAB {
                      "channels": {
                        "L": 53.58501345216902,
                        "a": 0,
                        "b": -2.220446049250313e-14,
                      },
                      "spaceName": "lab",
                      "tags": [],
                    },
                  },
                  "threshold": 20,
                  "type": "similar",
                },
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {
                  "c": "#008000",
                  "index(c)": 1,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLBool {
                "inducedVariables": {
                  "c": "#008000",
                  "index(c)": 1,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLBool {
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "bool",
            "value": false,
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "c",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 10`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLConjunction {
                "children": [
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLPredicate {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "c",
                      },
                      "nodeType": "predicate",
                      "right": LLColor {
                        "constructorString": "darkred",
                        "nodeType": "color",
                        "value": CIELAB {
                          "channels": {
                            "L": 28.75820766095476,
                            "a": 51.45334895429457,
                            "b": 42.79761147038522,
                          },
                          "spaceName": "lab",
                          "tags": [],
                        },
                      },
                      "threshold": 20,
                      "type": "similar",
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLPredicate {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "c",
                      },
                      "nodeType": "predicate",
                      "right": LLColor {
                        "constructorString": "brown",
                        "nodeType": "color",
                        "value": CIELAB {
                          "channels": {
                            "L": 38.14895787910737,
                            "a": 50.383647204301,
                            "b": 31.834795317003028,
                          },
                          "spaceName": "lab",
                          "tags": [],
                        },
                      },
                      "threshold": 20,
                      "type": "similar",
                    },
                  },
                ],
                "nodeType": "conjunction",
                "type": "or",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "not",
        },
      },
      "type": "all",
      "varbs": [
        "c",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLConjunction {
                  "children": [
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLVariable {
                          "nodeType": "variable",
                          "value": "c",
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "darkred",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 28.75820766095476,
                              "a": 51.45334895429457,
                              "b": 42.79761147038522,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 20,
                        "type": "similar",
                      },
                    },
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLVariable {
                          "nodeType": "variable",
                          "value": "c",
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "brown",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 38.14895787910737,
                              "a": 50.383647204301,
                              "b": 31.834795317003028,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 20,
                        "type": "similar",
                      },
                    },
                  ],
                  "nodeType": "conjunction",
                  "type": "or",
                },
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLPredicate {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "c",
                      },
                      "nodeType": "predicate",
                      "right": LLColor {
                        "constructorString": "brown",
                        "nodeType": "color",
                        "value": CIELAB {
                          "channels": {
                            "L": 38.14895787910737,
                            "a": 50.383647204301,
                            "b": 31.834795317003028,
                          },
                          "spaceName": "lab",
                          "tags": [],
                        },
                      },
                      "threshold": 20,
                      "type": "similar",
                    },
                  },
                ],
                "inducedVariables": {
                  "c": "#f00",
                  "index(c)": 0,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "inducedVariables": {
                      "c": "#f00",
                      "index(c)": 0,
                    },
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
                "inducedVariables": {
                  "c": "#f00",
                  "index(c)": 0,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLBool {
                "nodeType": "bool",
                "value": true,
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLBool {
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "bool",
            "value": false,
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLConjunction {
                  "children": [
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLVariable {
                          "nodeType": "variable",
                          "value": "c",
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "darkred",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 28.75820766095476,
                              "a": 51.45334895429457,
                              "b": 42.79761147038522,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 20,
                        "type": "similar",
                      },
                    },
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLVariable {
                          "nodeType": "variable",
                          "value": "c",
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "brown",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 38.14895787910737,
                              "a": 50.383647204301,
                              "b": 31.834795317003028,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 20,
                        "type": "similar",
                      },
                    },
                  ],
                  "nodeType": "conjunction",
                  "type": "or",
                },
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLPredicate {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "c",
                      },
                      "nodeType": "predicate",
                      "right": LLColor {
                        "constructorString": "brown",
                        "nodeType": "color",
                        "value": CIELAB {
                          "channels": {
                            "L": 38.14895787910737,
                            "a": 50.383647204301,
                            "b": 31.834795317003028,
                          },
                          "spaceName": "lab",
                          "tags": [],
                        },
                      },
                      "threshold": 20,
                      "type": "similar",
                    },
                  },
                ],
                "inducedVariables": {
                  "c": "#008000",
                  "index(c)": 1,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "inducedVariables": {
                      "c": "#008000",
                      "index(c)": 1,
                    },
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
                "inducedVariables": {
                  "c": "#008000",
                  "index(c)": 1,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLBool {
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "bool",
            "value": true,
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
    ],
    "varb": "c",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 11`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLConjunction {
                "children": [
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLPredicate {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "c",
                      },
                      "nodeType": "predicate",
                      "right": LLColor {
                        "constructorString": "green",
                        "nodeType": "color",
                        "value": CIELAB {
                          "channels": {
                            "L": 46.27770784805982,
                            "a": -47.552395089952206,
                            "b": 48.5862848460751,
                          },
                          "spaceName": "lab",
                          "tags": [],
                        },
                      },
                      "threshold": 20,
                      "type": "similar",
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLPredicate {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "c",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "lab.l",
                      },
                      "nodeType": "predicate",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 70,
                      },
                      "threshold": undefined,
                      "type": ">",
                    },
                  },
                ],
                "nodeType": "conjunction",
                "type": "or",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "not",
        },
      },
      "type": "all",
      "varbs": [
        "c",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLConjunction {
                  "children": [
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLVariable {
                          "nodeType": "variable",
                          "value": "c",
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "green",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 46.27770784805982,
                              "a": -47.552395089952206,
                              "b": 48.5862848460751,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 20,
                        "type": "similar",
                      },
                    },
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "c",
                          },
                          "nodeType": "valueFunction",
                          "params": {},
                          "type": "lab.l",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 70,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    },
                  ],
                  "nodeType": "conjunction",
                  "type": "or",
                },
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLPredicate {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "c",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "lab.l",
                      },
                      "nodeType": "predicate",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 70,
                      },
                      "threshold": undefined,
                      "type": ">",
                    },
                  },
                ],
                "inducedVariables": {
                  "c": "#f00",
                  "index(c)": 0,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "inducedVariables": {
                      "c": "#f00",
                      "index(c)": 0,
                    },
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "c": "#f00",
                      "index(c)": 0,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 54.29054140467191,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 70,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                ],
                "inducedVariables": {
                  "c": "#f00",
                  "index(c)": 0,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "inducedVariables": {
                      "c": "#f00",
                      "index(c)": 0,
                    },
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
                "inducedVariables": {
                  "c": "#f00",
                  "index(c)": 0,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
            ],
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLBool {
            "inducedVariables": {
              "c": "#f00",
              "index(c)": 0,
            },
            "nodeType": "bool",
            "value": true,
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLConjunction {
                  "children": [
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLVariable {
                          "nodeType": "variable",
                          "value": "c",
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "green",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 46.27770784805982,
                              "a": -47.552395089952206,
                              "b": 48.5862848460751,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 20,
                        "type": "similar",
                      },
                    },
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "c",
                          },
                          "nodeType": "valueFunction",
                          "params": {},
                          "type": "lab.l",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 70,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    },
                  ],
                  "nodeType": "conjunction",
                  "type": "or",
                },
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLPredicate {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "c",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "lab.l",
                      },
                      "nodeType": "predicate",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 70,
                      },
                      "threshold": undefined,
                      "type": ">",
                    },
                  },
                ],
                "inducedVariables": {
                  "c": "#008000",
                  "index(c)": 1,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "inducedVariables": {
                      "c": "#008000",
                      "index(c)": 1,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "c": "#008000",
                      "index(c)": 1,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 46.27770784805982,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 70,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                ],
                "inducedVariables": {
                  "c": "#008000",
                  "index(c)": 1,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLConjunction {
                "children": [
                  LLBool {
                    "inducedVariables": {
                      "c": "#008000",
                      "index(c)": 1,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
                "inducedVariables": {
                  "c": "#008000",
                  "index(c)": 1,
                },
                "nodeType": "conjunction",
                "type": "or",
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLConjunction {
            "children": [
              LLBool {
                "nodeType": "bool",
                "value": true,
              },
            ],
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "conjunction",
            "type": "not",
          },
          LLBool {
            "inducedVariables": {
              "c": "#008000",
              "index(c)": 1,
            },
            "nodeType": "bool",
            "value": false,
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "c",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 12`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "deuteranopia",
                    },
                    "type": "cvdSim",
                  },
                  "nodeType": "predicate",
                  "right": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "b",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "deuteranopia",
                    },
                    "type": "cvdSim",
                  },
                  "threshold": 9,
                  "type": "similar",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "not",
          },
        },
        "type": "all",
        "varbs": [
          "b",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(a)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(b)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "deuteranopia",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "deuteranopia",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#9b9b00",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 62.46057567197121,
                              "a": -10.877327253457691,
                              "b": 64.50055351868562,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "deuteranopia",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#9b9b00",
                          "inducedVariables": {
                            "a": "#f00",
                            "b": "#008000",
                            "index(a)": 0,
                            "index(b)": 1,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 62.46057567197121,
                              "a": -10.877327253457691,
                              "b": 64.50055351868562,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#6a6a16",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 43.76722055724194,
                              "a": -7.7956612798162075,
                              "b": 43.56344576087999,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "deuteranopia",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "deuteranopia",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#6a6a16",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 43.76722055724194,
                              "a": -7.7956612798162075,
                              "b": 43.56344576087999,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "deuteranopia",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#6a6a16",
                          "inducedVariables": {
                            "a": "#008000",
                            "b": "#f00",
                            "index(a)": 1,
                            "index(b)": 0,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 43.76722055724194,
                              "a": -7.7956612798162075,
                              "b": 43.56344576087999,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#9b9b00",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 62.46057567197121,
                              "a": -10.877327253457691,
                              "b": 64.50055351868562,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 13`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "protanopia",
                    },
                    "type": "cvdSim",
                  },
                  "nodeType": "predicate",
                  "right": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "b",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "protanopia",
                    },
                    "type": "cvdSim",
                  },
                  "threshold": 9,
                  "type": "similar",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "not",
          },
        },
        "type": "all",
        "varbs": [
          "b",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(a)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(b)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "protanopia",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "protanopia",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#727200",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 46.76456840260467,
                              "a": -8.701322219345553,
                              "b": 51.59724318433233,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "protanopia",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#727200",
                          "inducedVariables": {
                            "a": "#f00",
                            "b": "#008000",
                            "index(a)": 0,
                            "index(b)": 1,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 46.76456840260467,
                              "a": -8.701322219345553,
                              "b": 51.59724318433233,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#767600",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 48.19152186359403,
                              "a": -8.899146918408707,
                              "b": 52.77030732885271,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "protanopia",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "protanopia",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#767600",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 48.19152186359403,
                              "a": -8.899146918408707,
                              "b": 52.77030732885271,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "protanopia",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#767600",
                          "inducedVariables": {
                            "a": "#008000",
                            "b": "#f00",
                            "index(a)": 1,
                            "index(b)": 0,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 48.19152186359403,
                              "a": -8.899146918408707,
                              "b": 52.77030732885271,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#727200",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 46.76456840260467,
                              "a": -8.701322219345553,
                              "b": 51.59724318433233,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 14`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "tritanopia",
                    },
                    "type": "cvdSim",
                  },
                  "nodeType": "predicate",
                  "right": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "b",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "tritanopia",
                    },
                    "type": "cvdSim",
                  },
                  "threshold": 9,
                  "type": "similar",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "not",
          },
        },
        "type": "all",
        "varbs": [
          "b",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(a)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(b)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "tritanopia",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "tritanopia",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#f00",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 54.29054140467191,
                              "a": 80.80492817043522,
                              "b": 69.89096476862429,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "tritanopia",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#f00",
                          "inducedVariables": {
                            "a": "#f00",
                            "b": "#008000",
                            "index(a)": 0,
                            "index(b)": 1,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 54.29054140467191,
                              "a": 80.80492817043522,
                              "b": 69.89096476862429,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#2e7878",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 45.96956021509893,
                              "a": -23.59229008790173,
                              "b": -7.223399499255323,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "tritanopia",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "tritanopia",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#2e7878",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 45.96956021509893,
                              "a": -23.59229008790173,
                              "b": -7.223399499255323,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "tritanopia",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#2e7878",
                          "inducedVariables": {
                            "a": "#008000",
                            "b": "#f00",
                            "index(a)": 1,
                            "index(b)": 0,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 45.96956021509893,
                              "a": -23.59229008790173,
                              "b": -7.223399499255323,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#f00",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 54.29054140467191,
                              "a": 80.80492817043522,
                              "b": 69.89096476862429,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 15`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "grayscale",
                    },
                    "type": "cvdSim",
                  },
                  "nodeType": "predicate",
                  "right": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "b",
                    },
                    "nodeType": "valueFunction",
                    "params": {
                      "type": "grayscale",
                    },
                    "type": "cvdSim",
                  },
                  "threshold": 9,
                  "type": "similar",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "not",
          },
        },
        "type": "all",
        "varbs": [
          "b",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(a)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(b)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "grayscale",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "grayscale",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#7f7f7f",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 53.14209200626391,
                              "a": 0,
                              "b": 0,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "grayscale",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#f00",
                          "b": "#008000",
                          "index(a)": 0,
                          "index(b)": 1,
                        },
                        "left": LLColor {
                          "constructorString": "#7f7f7f",
                          "inducedVariables": {
                            "a": "#f00",
                            "b": "#008000",
                            "index(a)": 0,
                            "index(b)": 1,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 53.14209200626391,
                              "a": 0,
                              "b": 0,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#6d6d6d",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 46.034430285703216,
                              "a": 0,
                              "b": 0,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "grayscale",
                            },
                            "type": "cvdSim",
                          },
                          "nodeType": "predicate",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "b",
                            },
                            "nodeType": "valueFunction",
                            "params": {
                              "type": "grayscale",
                            },
                            "type": "cvdSim",
                          },
                          "threshold": 9,
                          "type": "similar",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#6d6d6d",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 46.034430285703216,
                              "a": 0,
                              "b": 0,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "nodeType": "valueFunction",
                          "params": {
                            "type": "grayscale",
                          },
                          "type": "cvdSim",
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "a": "#008000",
                          "b": "#f00",
                          "index(a)": 1,
                          "index(b)": 0,
                        },
                        "left": LLColor {
                          "constructorString": "#6d6d6d",
                          "inducedVariables": {
                            "a": "#008000",
                            "b": "#f00",
                            "index(a)": 1,
                            "index(b)": 0,
                          },
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 46.034430285703216,
                              "a": 0,
                              "b": 0,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "nodeType": "predicate",
                        "right": LLColor {
                          "constructorString": "#7f7f7f",
                          "nodeType": "color",
                          "value": CIELAB {
                            "channels": {
                              "L": 53.14209200626391,
                              "a": 0,
                              "b": 0,
                            },
                            "spaceName": "lab",
                            "tags": [],
                          },
                        },
                        "threshold": 9,
                        "type": "similar",
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 16`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLPairFunction {
            "left": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "pairFunction",
            "params": {
              "algorithm": "Lstar",
            },
            "right": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "type": "contrast",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 20,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": LLValueFunction {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "a",
        },
        "nodeType": "valueFunction",
        "params": {
          "value": "axis",
        },
        "type": "isTag",
      },
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "didEval": true,
        "result": "WHERE SKIP",
      },
      {
        "color": "#008000",
        "didEval": true,
        "result": "WHERE SKIP",
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 17`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "name",
          },
          "nodeType": "predicate",
          "right": LLColor {
            "constructorString": "electricBlue",
            "nodeType": "color",
            "value": CIELAB {
              "channels": {
                "L": 0,
                "a": 0,
                "b": 0,
              },
              "spaceName": "lab",
              "tags": [],
            },
          },
          "threshold": undefined,
          "type": "==",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": LLValueFunction {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "a",
        },
        "nodeType": "valueFunction",
        "params": {
          "value": "blue",
        },
        "type": "isTag",
      },
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "didEval": true,
        "result": "WHERE SKIP",
      },
      {
        "color": "#008000",
        "didEval": true,
        "result": "WHERE SKIP",
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 18`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLConjunction {
      "children": [
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLAggregate {
              "children": LLMap {
                "children": LLMap {
                  "children": LLVariable {
                    "nodeType": "variable",
                    "value": "colors",
                  },
                  "func": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "x",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "lch.h",
                  },
                  "nodeType": "map",
                  "type": "sort",
                  "varb": "x",
                },
                "func": " ",
                "nodeType": "map",
                "type": "speed",
                "varb": " ",
              },
              "nodeType": "aggregate",
              "type": "std",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 10,
            },
            "threshold": undefined,
            "type": "<",
          },
        },
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLAggregate {
              "children": LLMap {
                "children": LLMap {
                  "children": LLVariable {
                    "nodeType": "variable",
                    "value": "colors",
                  },
                  "func": LLNumberOp {
                    "left": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "x",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "lch.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 360,
                    },
                    "type": "%",
                  },
                  "nodeType": "map",
                  "type": "sort",
                  "varb": "x",
                },
                "func": " ",
                "nodeType": "map",
                "type": "speed",
                "varb": " ",
              },
              "nodeType": "aggregate",
              "type": "std",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 10,
            },
            "threshold": undefined,
            "type": "<",
          },
        },
      ],
      "inducedVariables": {},
      "nodeType": "conjunction",
      "type": "or",
    },
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLMap {
            "children": LLValueArray {
              "children": [
                LLNumber {
                  "nodeType": "number",
                  "value": 40.85764559535954,
                },
                LLNumber {
                  "nodeType": "number",
                  "value": 134.38378630956015,
                },
              ],
              "nodeType": "array",
            },
            "func": " ",
            "inducedVariables": {},
            "nodeType": "map",
            "type": "speed",
            "varb": " ",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "std",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLNumberOp {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lch.h",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180,
                    },
                    "type": "+",
                  },
                  "nodeType": "numberOp",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 360,
                  },
                  "type": "%",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "func": " ",
              "nodeType": "map",
              "type": "speed",
              "varb": " ",
            },
            "nodeType": "aggregate",
            "type": "std",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 10,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLValueArray {
            "children": [
              LLNumber {
                "nodeType": "number",
                "value": 93.52614071420061,
              },
            ],
            "nodeType": "array",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "std",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLNumberOp {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lch.h",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180,
                    },
                    "type": "+",
                  },
                  "nodeType": "numberOp",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 360,
                  },
                  "type": "%",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "func": " ",
              "nodeType": "map",
              "type": "speed",
              "varb": " ",
            },
            "nodeType": "aggregate",
            "type": "std",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 10,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLNumber {
          "nodeType": "number",
          "value": 0,
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLNumberOp {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lch.h",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180,
                    },
                    "type": "+",
                  },
                  "nodeType": "numberOp",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 360,
                  },
                  "type": "%",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "func": " ",
              "nodeType": "map",
              "type": "speed",
              "varb": " ",
            },
            "nodeType": "aggregate",
            "type": "std",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 10,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLNumberOp {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lch.h",
                    },
                    "nodeType": "numberOp",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180,
                    },
                    "type": "+",
                  },
                  "nodeType": "numberOp",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 360,
                  },
                  "type": "%",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "func": " ",
              "nodeType": "map",
              "type": "speed",
              "varb": " ",
            },
            "nodeType": "aggregate",
            "type": "std",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 10,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLMap {
            "children": LLValueArray {
              "children": [
                LLNumber {
                  "nodeType": "number",
                  "value": 220.85764559535954,
                },
                LLNumber {
                  "nodeType": "number",
                  "value": 314.38378630956015,
                },
              ],
              "nodeType": "array",
            },
            "func": " ",
            "inducedVariables": {},
            "nodeType": "map",
            "type": "speed",
            "varb": " ",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "std",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLValueArray {
            "children": [
              LLNumber {
                "nodeType": "number",
                "value": 93.52614071420061,
              },
            ],
            "nodeType": "array",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "std",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLNumber {
          "nodeType": "number",
          "value": 0,
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 10,
        },
        "threshold": undefined,
        "type": "<",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLBool {
    "inducedVariables": {},
    "nodeType": "bool",
    "value": true,
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 19`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLPredicate {
      "inducedVariables": {},
      "left": LLAggregate {
        "children": LLMap {
          "children": LLMap {
            "children": LLVariable {
              "nodeType": "variable",
              "value": "colors",
            },
            "func": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "x",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "lch.l",
            },
            "nodeType": "map",
            "type": "sort",
            "varb": "x",
          },
          "func": " ",
          "nodeType": "map",
          "type": "speed",
          "varb": " ",
        },
        "nodeType": "aggregate",
        "type": "std",
      },
      "nodeType": "predicate",
      "right": LLNumber {
        "nodeType": "number",
        "value": 5,
      },
      "threshold": undefined,
      "type": "<",
    },
  },
  LLPredicate {
    "inducedVariables": {},
    "left": LLAggregate {
      "children": LLMap {
        "children": LLValueArray {
          "children": [
            LLNumber {
              "nodeType": "number",
              "value": 46.278,
            },
            LLNumber {
              "nodeType": "number",
              "value": 54.291,
            },
          ],
          "nodeType": "array",
        },
        "func": " ",
        "inducedVariables": {},
        "nodeType": "map",
        "type": "speed",
        "varb": " ",
      },
      "inducedVariables": {},
      "nodeType": "aggregate",
      "type": "std",
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 5,
    },
    "threshold": undefined,
    "type": "<",
  },
  LLPredicate {
    "inducedVariables": {},
    "left": LLAggregate {
      "children": LLValueArray {
        "children": [
          LLNumber {
            "nodeType": "number",
            "value": 8.012999999999998,
          },
        ],
        "nodeType": "array",
      },
      "inducedVariables": {},
      "nodeType": "aggregate",
      "type": "std",
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 5,
    },
    "threshold": undefined,
    "type": "<",
  },
  LLPredicate {
    "inducedVariables": {},
    "left": LLNumber {
      "nodeType": "number",
      "value": 0,
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 5,
    },
    "threshold": undefined,
    "type": "<",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 20`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLConjunction {
      "children": [
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLAggregate {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "x",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "lch.l",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "nodeType": "aggregate",
              "type": "extent",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 50,
            },
            "threshold": undefined,
            "type": "<",
          },
        },
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLAggregate {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "x",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "lch.c",
                },
                "nodeType": "map",
                "type": "sort",
                "varb": "x",
              },
              "nodeType": "aggregate",
              "type": "extent",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 80,
            },
            "threshold": undefined,
            "type": "<",
          },
        },
      ],
      "inducedVariables": {},
      "nodeType": "conjunction",
      "type": "and",
    },
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLValueArray {
            "children": [
              LLNumber {
                "nodeType": "number",
                "value": 46.278,
              },
              LLNumber {
                "nodeType": "number",
                "value": 54.291,
              },
            ],
            "nodeType": "array",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "extent",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 50,
        },
        "threshold": undefined,
        "type": "<",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "func": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "x",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "lch.c",
              },
              "nodeType": "map",
              "type": "sort",
              "varb": "x",
            },
            "nodeType": "aggregate",
            "type": "extent",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 80,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "and",
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLNumber {
          "nodeType": "number",
          "value": 8.012999999999998,
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 50,
        },
        "threshold": undefined,
        "type": "<",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "func": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "x",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "lch.c",
              },
              "nodeType": "map",
              "type": "sort",
              "varb": "x",
            },
            "nodeType": "aggregate",
            "type": "extent",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 80,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "and",
  },
  LLConjunction {
    "children": [
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLAggregate {
            "children": LLMap {
              "children": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "func": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "x",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "lch.c",
              },
              "nodeType": "map",
              "type": "sort",
              "varb": "x",
            },
            "nodeType": "aggregate",
            "type": "extent",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 80,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "and",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLAggregate {
          "children": LLValueArray {
            "children": [
              LLNumber {
                "nodeType": "number",
                "value": 67.98376350276587,
              },
              LLNumber {
                "nodeType": "number",
                "value": 106.83725897831712,
              },
            ],
            "nodeType": "array",
          },
          "inducedVariables": {},
          "nodeType": "aggregate",
          "type": "extent",
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 80,
        },
        "threshold": undefined,
        "type": "<",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "and",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLNumber {
          "nodeType": "number",
          "value": 38.853495475551256,
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 80,
        },
        "threshold": undefined,
        "type": "<",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "and",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "and",
  },
  LLBool {
    "inducedVariables": {},
    "nodeType": "bool",
    "value": true,
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 21`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLPredicate {
      "inducedVariables": {},
      "left": LLAggregate {
        "children": LLMap {
          "children": LLVariable {
            "nodeType": "variable",
            "value": "colors",
          },
          "func": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "x",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "lch.l",
          },
          "nodeType": "map",
          "type": "sort",
          "varb": "x",
        },
        "nodeType": "aggregate",
        "type": "extent",
      },
      "nodeType": "predicate",
      "right": LLNumber {
        "nodeType": "number",
        "value": 50,
      },
      "threshold": undefined,
      "type": "<",
    },
  },
  LLPredicate {
    "inducedVariables": {},
    "left": LLAggregate {
      "children": LLValueArray {
        "children": [
          LLNumber {
            "nodeType": "number",
            "value": 46.278,
          },
          LLNumber {
            "nodeType": "number",
            "value": 54.291,
          },
        ],
        "nodeType": "array",
      },
      "inducedVariables": {},
      "nodeType": "aggregate",
      "type": "extent",
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 50,
    },
    "threshold": undefined,
    "type": "<",
  },
  LLPredicate {
    "inducedVariables": {},
    "left": LLNumber {
      "nodeType": "number",
      "value": 8.012999999999998,
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 50,
    },
    "threshold": undefined,
    "type": "<",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 22`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLConjunction {
      "children": [
        LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLConjunction {
                  "children": [
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "background",
                          },
                          "nodeType": "valueFunction",
                          "params": {},
                          "type": "hsl.l",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 90,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    },
                    LLExpression {
                      "nodeType": "expression",
                      "value": LLPredicate {
                        "left": LLValueFunction {
                          "input": LLVariable {
                            "nodeType": "variable",
                            "value": "background",
                          },
                          "nodeType": "valueFunction",
                          "params": {},
                          "type": "hsv.s",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8,
                        },
                        "threshold": undefined,
                        "type": "<",
                      },
                    },
                  ],
                  "nodeType": "conjunction",
                  "type": "and",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "background",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.l",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 99,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "or",
          },
        },
        LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "background",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.l",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 10,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "background",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.l",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 26,
                  },
                  "threshold": undefined,
                  "type": "<",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "background",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsv.s",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 21,
                  },
                  "threshold": undefined,
                  "type": "<",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "and",
          },
        },
      ],
      "inducedVariables": {},
      "nodeType": "conjunction",
      "type": "or",
    },
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLConjunction {
            "children": [
              LLPredicate {
                "inducedVariables": {},
                "left": LLNumber {
                  "nodeType": "number",
                  "value": 99.99999999999997,
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 90,
                },
                "threshold": undefined,
                "type": ">",
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "background",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsv.s",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 8,
                  },
                  "threshold": undefined,
                  "type": "<",
                },
              },
            ],
            "inducedVariables": {},
            "nodeType": "conjunction",
            "type": "and",
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsl.l",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 99,
              },
              "threshold": undefined,
              "type": ">",
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "or",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 10,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 26,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsv.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 21,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "and",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLConjunction {
            "children": [
              LLBool {
                "nodeType": "bool",
                "value": true,
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "background",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsv.s",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 8,
                  },
                  "threshold": undefined,
                  "type": "<",
                },
              },
            ],
            "inducedVariables": {},
            "nodeType": "conjunction",
            "type": "and",
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsl.l",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 99,
              },
              "threshold": undefined,
              "type": ">",
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "or",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 10,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 26,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsv.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 21,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "and",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {},
                "nodeType": "bool",
                "value": true,
              },
              LLPredicate {
                "inducedVariables": {},
                "left": LLNumber {
                  "nodeType": "number",
                  "value": 2.220446049250313e-14,
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 8,
                },
                "threshold": undefined,
                "type": "<",
              },
            ],
            "inducedVariables": {},
            "nodeType": "conjunction",
            "type": "and",
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsl.l",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 99,
              },
              "threshold": undefined,
              "type": ">",
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "or",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 10,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 26,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsv.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 21,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "and",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {},
                "nodeType": "bool",
                "value": true,
              },
              LLBool {
                "nodeType": "bool",
                "value": true,
              },
            ],
            "inducedVariables": {},
            "nodeType": "conjunction",
            "type": "and",
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsl.l",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 99,
              },
              "threshold": undefined,
              "type": ">",
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "or",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 10,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 26,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsv.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 21,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "and",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsl.l",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 99,
              },
              "threshold": undefined,
              "type": ">",
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "or",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 10,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 26,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsv.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 21,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "and",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLBool {
            "inducedVariables": {},
            "nodeType": "bool",
            "value": true,
          },
          LLPredicate {
            "inducedVariables": {},
            "left": LLNumber {
              "nodeType": "number",
              "value": 99.99999999999997,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 99,
            },
            "threshold": undefined,
            "type": ">",
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "or",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 10,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 26,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsv.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 21,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "and",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLBool {
            "inducedVariables": {},
            "nodeType": "bool",
            "value": true,
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "or",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 10,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 26,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsv.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 21,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "and",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 10,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.l",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 26,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "background",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsv.s",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 21,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "and",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLConjunction {
        "children": [
          LLPredicate {
            "inducedVariables": {},
            "left": LLNumber {
              "nodeType": "number",
              "value": 99.99999999999997,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 10,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsl.l",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 26,
              },
              "threshold": undefined,
              "type": "<",
            },
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsv.s",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 21,
              },
              "threshold": undefined,
              "type": "<",
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "and",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLConjunction {
        "children": [
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsl.l",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 26,
              },
              "threshold": undefined,
              "type": "<",
            },
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsv.s",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 21,
              },
              "threshold": undefined,
              "type": "<",
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "and",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLConjunction {
        "children": [
          LLBool {
            "inducedVariables": {},
            "nodeType": "bool",
            "value": true,
          },
          LLPredicate {
            "inducedVariables": {},
            "left": LLNumber {
              "nodeType": "number",
              "value": 99.99999999999997,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 26,
            },
            "threshold": undefined,
            "type": "<",
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsv.s",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 21,
              },
              "threshold": undefined,
              "type": "<",
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "and",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLConjunction {
        "children": [
          LLBool {
            "inducedVariables": {},
            "nodeType": "bool",
            "value": true,
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "background",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsv.s",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 21,
              },
              "threshold": undefined,
              "type": "<",
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "and",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLConjunction {
        "children": [
          LLBool {
            "inducedVariables": {},
            "nodeType": "bool",
            "value": true,
          },
          LLBool {
            "inducedVariables": {},
            "nodeType": "bool",
            "value": false,
          },
          LLPredicate {
            "inducedVariables": {},
            "left": LLNumber {
              "nodeType": "number",
              "value": 2.220446049250313e-14,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 21,
            },
            "threshold": undefined,
            "type": "<",
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "and",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLConjunction {
        "children": [
          LLBool {
            "inducedVariables": {},
            "nodeType": "bool",
            "value": true,
          },
          LLBool {
            "inducedVariables": {},
            "nodeType": "bool",
            "value": false,
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "and",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLBool {
        "nodeType": "bool",
        "value": false,
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLBool {
    "inducedVariables": {},
    "nodeType": "bool",
    "value": true,
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 23`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLConjunction {
      "children": [
        LLExpression {
          "nodeType": "expression",
          "value": LLQuantifier {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "colors",
            },
            "nodeType": "quantifier",
            "predicate": LLExpression {
              "nodeType": "expression",
              "value": LLConjunction {
                "children": [
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 90,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 180,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 270,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                ],
                "nodeType": "conjunction",
                "type": "and",
              },
            },
            "type": "exist",
            "varbs": [
              "a",
            ],
            "where": undefined,
          },
        },
      ],
      "inducedVariables": {},
      "nodeType": "conjunction",
      "type": "not",
    },
  },
  LLConjunction {
    "children": [
      {
        "quant": "exist",
        "quantifierResult": false,
        "results": [
          {
            "color": "#f00",
            "evals": [
              LLConjunction {
                "children": [
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 90,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 180,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 270,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                ],
                "inducedVariables": {
                  "a": "#f00",
                  "index(a)": 0,
                },
                "nodeType": "conjunction",
                "type": "and",
              },
              LLConjunction {
                "children": [
                  {
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#f00",
                                  "index(a)": 0,
                                  "index(b)": 0,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 90.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 90.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#008000",
                                  "index(a)": 0,
                                  "index(b)": 1,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 209.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 209.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 180,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 270,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                ],
                "inducedVariables": {
                  "a": "#f00",
                  "index(a)": 0,
                },
                "nodeType": "conjunction",
                "type": "and",
              },
              LLConjunction {
                "children": [
                  {
                    "inducedVariables": {
                      "a": "#f00",
                      "index(a)": 0,
                    },
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#f00",
                                  "index(a)": 0,
                                  "index(b)": 0,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 90.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 90.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#008000",
                                  "index(a)": 0,
                                  "index(b)": 1,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 209.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 209.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  {
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#f00",
                                  "index(a)": 0,
                                  "index(b)": 0,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 180.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 180.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#008000",
                                  "index(a)": 0,
                                  "index(b)": 1,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 299.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 299.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 270,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                ],
                "inducedVariables": {
                  "a": "#f00",
                  "index(a)": 0,
                },
                "nodeType": "conjunction",
                "type": "and",
              },
              LLConjunction {
                "children": [
                  {
                    "inducedVariables": {
                      "a": "#f00",
                      "index(a)": 0,
                    },
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#f00",
                                  "index(a)": 0,
                                  "index(b)": 0,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 90.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 90.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#008000",
                                  "index(a)": 0,
                                  "index(b)": 1,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 209.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 209.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  {
                    "inducedVariables": {
                      "a": "#f00",
                      "index(a)": 0,
                    },
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#f00",
                                  "index(a)": 0,
                                  "index(b)": 0,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 180.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 180.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#008000",
                                  "index(a)": 0,
                                  "index(b)": 1,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 299.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 299.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  {
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#f00",
                                  "index(a)": 0,
                                  "index(b)": 0,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 270.0008999644876,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#f00",
                              "index(a)": 0,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#f00",
                                "index(a)": 0,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 270.0008999644876,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#f00",
                                  "b": "#008000",
                                  "index(a)": 0,
                                  "index(b)": 1,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 389.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#f00",
                              "b": "#008000",
                              "index(a)": 0,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#f00",
                                "b": "#008000",
                                "index(a)": 0,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 0.0008999644875609756,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 29.998304677740748,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                ],
                "inducedVariables": {
                  "a": "#f00",
                  "index(a)": 0,
                },
                "nodeType": "conjunction",
                "type": "and",
              },
              LLBool {
                "inducedVariables": {
                  "a": "#f00",
                  "index(a)": 0,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
            ],
          },
          {
            "color": "#008000",
            "evals": [
              LLConjunction {
                "children": [
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 90,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 180,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 270,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                ],
                "inducedVariables": {
                  "a": "#008000",
                  "index(a)": 1,
                },
                "nodeType": "conjunction",
                "type": "and",
              },
              LLConjunction {
                "children": [
                  {
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#f00",
                                  "index(a)": 1,
                                  "index(b)": 0,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 90.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 90.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#008000",
                                  "index(a)": 1,
                                  "index(b)": 1,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 209.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 209.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 180,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 270,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                ],
                "inducedVariables": {
                  "a": "#008000",
                  "index(a)": 1,
                },
                "nodeType": "conjunction",
                "type": "and",
              },
              LLConjunction {
                "children": [
                  {
                    "inducedVariables": {
                      "a": "#008000",
                      "index(a)": 1,
                    },
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#f00",
                                  "index(a)": 1,
                                  "index(b)": 0,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 90.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 90.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#008000",
                                  "index(a)": 1,
                                  "index(b)": 1,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 209.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 209.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  {
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#f00",
                                  "index(a)": 1,
                                  "index(b)": 0,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 180.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 180.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#008000",
                                  "index(a)": 1,
                                  "index(b)": 1,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 299.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 299.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  LLExpression {
                    "nodeType": "expression",
                    "value": LLQuantifier {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "colors",
                      },
                      "nodeType": "quantifier",
                      "predicate": LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "a",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "hsl.h",
                          },
                          "nodeType": "predicate",
                          "right": LLNumberOp {
                            "left": LLNumberOp {
                              "left": LLValueFunction {
                                "input": LLVariable {
                                  "nodeType": "variable",
                                  "value": "b",
                                },
                                "nodeType": "valueFunction",
                                "params": {},
                                "type": "hsl.h",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 270,
                              },
                              "type": "+",
                            },
                            "nodeType": "numberOp",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 360,
                            },
                            "type": "%",
                          },
                          "threshold": 5,
                          "type": "similar",
                        },
                      },
                      "type": "exist",
                      "varbs": [
                        "b",
                      ],
                      "where": undefined,
                    },
                  },
                ],
                "inducedVariables": {
                  "a": "#008000",
                  "index(a)": 1,
                },
                "nodeType": "conjunction",
                "type": "and",
              },
              LLConjunction {
                "children": [
                  {
                    "inducedVariables": {
                      "a": "#008000",
                      "index(a)": 1,
                    },
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#f00",
                                  "index(a)": 1,
                                  "index(b)": 0,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 90.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 90.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#008000",
                                  "index(a)": 1,
                                  "index(b)": 1,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 90,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 209.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 209.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  {
                    "inducedVariables": {
                      "a": "#008000",
                      "index(a)": 1,
                    },
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#f00",
                                  "index(a)": 1,
                                  "index(b)": 0,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 180.00089996448756,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 180.00089996448756,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "input": {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "left": {
                                "left": {
                                  "input": {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#008000",
                                  "index(a)": 1,
                                  "index(b)": 1,
                                },
                                "left": {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": {
                                  "nodeType": "number",
                                  "value": 180,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": {
                                "nodeType": "number",
                                "value": 299.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": {
                              "nodeType": "number",
                              "value": 299.99830467774075,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                  {
                    "quant": "exist",
                    "quantifierResult": false,
                    "results": [
                      {
                        "color": "#f00",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#f00",
                                  "index(a)": 1,
                                  "index(b)": 0,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 0.0008999644875609756,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 270.0008999644876,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#f00",
                              "index(a)": 1,
                              "index(b)": 0,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#f00",
                                "index(a)": 1,
                                "index(b)": 0,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 270.0008999644876,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                      {
                        "color": "#008000",
                        "evals": [
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "a",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "hsl.h",
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "left": LLNumberOp {
                                "left": LLValueFunction {
                                  "input": LLVariable {
                                    "nodeType": "variable",
                                    "value": "b",
                                  },
                                  "nodeType": "valueFunction",
                                  "params": {},
                                  "type": "hsl.h",
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": LLNumberOp {
                                "inducedVariables": {
                                  "a": "#008000",
                                  "b": "#008000",
                                  "index(a)": 1,
                                  "index(b)": 1,
                                },
                                "left": LLNumber {
                                  "nodeType": "number",
                                  "value": 119.99830467774073,
                                },
                                "nodeType": "numberOp",
                                "right": LLNumber {
                                  "nodeType": "number",
                                  "value": 270,
                                },
                                "type": "+",
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumberOp {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "left": LLNumber {
                                "nodeType": "number",
                                "value": 389.99830467774075,
                              },
                              "nodeType": "numberOp",
                              "right": LLNumber {
                                "nodeType": "number",
                                "value": 360,
                              },
                              "type": "%",
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLPredicate {
                            "inducedVariables": {
                              "a": "#008000",
                              "b": "#008000",
                              "index(a)": 1,
                              "index(b)": 1,
                            },
                            "left": LLNumber {
                              "inducedVariables": {
                                "a": "#008000",
                                "b": "#008000",
                                "index(a)": 1,
                                "index(b)": 1,
                              },
                              "nodeType": "number",
                              "value": 119.99830467774073,
                            },
                            "nodeType": "predicate",
                            "right": LLNumber {
                              "nodeType": "number",
                              "value": 29.998304677740748,
                            },
                            "threshold": 5,
                            "type": "similar",
                          },
                          LLBool {
                            "nodeType": "bool",
                            "value": false,
                          },
                        ],
                      },
                    ],
                    "varb": "b",
                  },
                ],
                "inducedVariables": {
                  "a": "#008000",
                  "index(a)": 1,
                },
                "nodeType": "conjunction",
                "type": "and",
              },
              LLBool {
                "inducedVariables": {
                  "a": "#008000",
                  "index(a)": 1,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
            ],
          },
        ],
        "varb": "a",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "not",
  },
  LLBool {
    "inducedVariables": {},
    "nodeType": "bool",
    "value": true,
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 24`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "a",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.h",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 90,
                },
                "threshold": undefined,
                "type": "<",
              },
            },
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "a",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "hsl.h",
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 150,
                },
                "threshold": undefined,
                "type": ">",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "or",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.h",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 90,
                  },
                  "threshold": undefined,
                  "type": "<",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.h",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 150,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLPredicate {
                "inducedVariables": {
                  "a": "#f00",
                  "index(a)": 0,
                },
                "left": LLNumber {
                  "nodeType": "number",
                  "value": 0.0008999644875609756,
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 90,
                },
                "threshold": undefined,
                "type": "<",
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.h",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 150,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "nodeType": "bool",
                "value": true,
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.h",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 150,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {
                  "a": "#f00",
                  "index(a)": 0,
                },
                "nodeType": "bool",
                "value": true,
              },
              LLPredicate {
                "inducedVariables": {
                  "a": "#f00",
                  "index(a)": 0,
                },
                "left": LLNumber {
                  "nodeType": "number",
                  "value": 0.0008999644875609756,
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 150,
                },
                "threshold": undefined,
                "type": ">",
              },
            ],
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {
                  "a": "#f00",
                  "index(a)": 0,
                },
                "nodeType": "bool",
                "value": true,
              },
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
            ],
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLBool {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "nodeType": "bool",
            "value": true,
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.h",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 90,
                  },
                  "threshold": undefined,
                  "type": "<",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.h",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 150,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLPredicate {
                "inducedVariables": {
                  "a": "#008000",
                  "index(a)": 1,
                },
                "left": LLNumber {
                  "nodeType": "number",
                  "value": 119.99830467774073,
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 90,
                },
                "threshold": undefined,
                "type": "<",
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.h",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 150,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.h",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 150,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {
                  "a": "#008000",
                  "index(a)": 1,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLPredicate {
                "inducedVariables": {
                  "a": "#008000",
                  "index(a)": 1,
                },
                "left": LLNumber {
                  "nodeType": "number",
                  "value": 119.99830467774073,
                },
                "nodeType": "predicate",
                "right": LLNumber {
                  "nodeType": "number",
                  "value": 150,
                },
                "threshold": undefined,
                "type": ">",
              },
            ],
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLConjunction {
            "children": [
              LLBool {
                "inducedVariables": {
                  "a": "#008000",
                  "index(a)": 1,
                },
                "nodeType": "bool",
                "value": false,
              },
              LLBool {
                "nodeType": "bool",
                "value": false,
              },
            ],
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "nodeType": "conjunction",
            "type": "or",
          },
          LLBool {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "nodeType": "bool",
            "value": false,
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 25`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLConjunction {
      "children": [
        LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLValueFunction {
                    "input": LLVariable {
                      "nodeType": "variable",
                      "value": "background",
                    },
                    "nodeType": "valueFunction",
                    "params": {},
                    "type": "hsl.l",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 50,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLQuantifier {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "colors",
                  },
                  "nodeType": "quantifier",
                  "predicate": LLExpression {
                    "nodeType": "expression",
                    "value": LLPredicate {
                      "left": LLPairFunction {
                        "left": LLVariable {
                          "nodeType": "variable",
                          "value": "a",
                        },
                        "nodeType": "pairFunction",
                        "params": {
                          "algorithm": "WCAG21",
                        },
                        "right": LLVariable {
                          "nodeType": "variable",
                          "value": "background",
                        },
                        "type": "contrast",
                      },
                      "nodeType": "predicate",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 10,
                      },
                      "threshold": undefined,
                      "type": "<",
                    },
                  },
                  "type": "all",
                  "varbs": [
                    "a",
                  ],
                  "where": undefined,
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "and",
          },
        },
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "background",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "hsl.l",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 50,
            },
            "threshold": undefined,
            "type": "<",
          },
        },
      ],
      "inducedVariables": {},
      "nodeType": "conjunction",
      "type": "or",
    },
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLPredicate {
            "inducedVariables": {},
            "left": LLNumber {
              "nodeType": "number",
              "value": 99.99999999999997,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 50,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLQuantifier {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "nodeType": "quantifier",
              "predicate": LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLPairFunction {
                    "left": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "pairFunction",
                    "params": {
                      "algorithm": "WCAG21",
                    },
                    "right": LLVariable {
                      "nodeType": "variable",
                      "value": "background",
                    },
                    "type": "contrast",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 10,
                  },
                  "threshold": undefined,
                  "type": "<",
                },
              },
              "type": "all",
              "varbs": [
                "a",
              ],
              "where": undefined,
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "and",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "hsl.l",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 50,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
          LLExpression {
            "nodeType": "expression",
            "value": LLQuantifier {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "nodeType": "quantifier",
              "predicate": LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLPairFunction {
                    "left": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "pairFunction",
                    "params": {
                      "algorithm": "WCAG21",
                    },
                    "right": LLVariable {
                      "nodeType": "variable",
                      "value": "background",
                    },
                    "type": "contrast",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 10,
                  },
                  "threshold": undefined,
                  "type": "<",
                },
              },
              "type": "all",
              "varbs": [
                "a",
              ],
              "where": undefined,
            },
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "and",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "hsl.l",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 50,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLConjunction {
        "children": [
          LLBool {
            "inducedVariables": {},
            "nodeType": "bool",
            "value": true,
          },
          {
            "quant": "all",
            "quantifierResult": true,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "index(a)": 0,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "WCAG21",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "background",
                      },
                      "type": "contrast",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": "<",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "index(a)": 0,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 3.997818803850546,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": "<",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#008000",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "index(a)": 1,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "WCAG21",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "background",
                      },
                      "type": "contrast",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": "<",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "index(a)": 1,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 5.137518325903408,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": "<",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "a",
          },
        ],
        "inducedVariables": {},
        "nodeType": "conjunction",
        "type": "and",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "hsl.l",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 50,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "hsl.l",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 50,
          },
          "threshold": undefined,
          "type": "<",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLNumber {
          "nodeType": "number",
          "value": 99.99999999999997,
        },
        "nodeType": "predicate",
        "right": LLNumber {
          "nodeType": "number",
          "value": 50,
        },
        "threshold": undefined,
        "type": "<",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": true,
      },
      LLBool {
        "nodeType": "bool",
        "value": false,
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLBool {
    "inducedVariables": {},
    "nodeType": "bool",
    "value": true,
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 26`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "hsl.h",
            },
            "nodeType": "predicate",
            "right": LLNumberOp {
              "left": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "b",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "hsl.h",
              },
              "nodeType": "numberOp",
              "right": LLNumber {
                "nodeType": "number",
                "value": 180,
              },
              "type": "+",
            },
            "threshold": 5,
            "type": "similar",
          },
        },
        "type": "exist",
        "varbs": [
          "b",
        ],
        "where": undefined,
      },
      "type": "exist",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "exist",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "exist",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#f00",
                      "index(a)": 0,
                      "index(b)": 0,
                    },
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "hsl.h",
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "b",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "hsl.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#f00",
                      "index(a)": 0,
                      "index(b)": 0,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 0.0008999644875609756,
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "b",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "hsl.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#f00",
                      "index(a)": 0,
                      "index(b)": 0,
                    },
                    "left": LLNumber {
                      "inducedVariables": {
                        "a": "#f00",
                        "b": "#f00",
                        "index(a)": 0,
                        "index(b)": 0,
                      },
                      "nodeType": "number",
                      "value": 0.0008999644875609756,
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "inducedVariables": {
                        "a": "#f00",
                        "b": "#f00",
                        "index(a)": 0,
                        "index(b)": 0,
                      },
                      "left": LLNumber {
                        "nodeType": "number",
                        "value": 0.0008999644875609756,
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#f00",
                      "index(a)": 0,
                      "index(b)": 0,
                    },
                    "left": LLNumber {
                      "inducedVariables": {
                        "a": "#f00",
                        "b": "#f00",
                        "index(a)": 0,
                        "index(b)": 0,
                      },
                      "nodeType": "number",
                      "value": 0.0008999644875609756,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180.00089996448756,
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
              },
              {
                "color": "#008000",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "hsl.h",
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "b",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "hsl.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 0.0008999644875609756,
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "b",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "hsl.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "inducedVariables": {
                        "a": "#f00",
                        "b": "#008000",
                        "index(a)": 0,
                        "index(b)": 1,
                      },
                      "nodeType": "number",
                      "value": 0.0008999644875609756,
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "inducedVariables": {
                        "a": "#f00",
                        "b": "#008000",
                        "index(a)": 0,
                        "index(b)": 1,
                      },
                      "left": LLNumber {
                        "nodeType": "number",
                        "value": 119.99830467774073,
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "inducedVariables": {
                        "a": "#f00",
                        "b": "#008000",
                        "index(a)": 0,
                        "index(b)": 1,
                      },
                      "nodeType": "number",
                      "value": 0.0008999644875609756,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 299.99830467774075,
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "exist",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "hsl.h",
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "b",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "hsl.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 119.99830467774073,
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "b",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "hsl.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLNumber {
                      "inducedVariables": {
                        "a": "#008000",
                        "b": "#f00",
                        "index(a)": 1,
                        "index(b)": 0,
                      },
                      "nodeType": "number",
                      "value": 119.99830467774073,
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "inducedVariables": {
                        "a": "#008000",
                        "b": "#f00",
                        "index(a)": 1,
                        "index(b)": 0,
                      },
                      "left": LLNumber {
                        "nodeType": "number",
                        "value": 0.0008999644875609756,
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLNumber {
                      "inducedVariables": {
                        "a": "#008000",
                        "b": "#f00",
                        "index(a)": 1,
                        "index(b)": 0,
                      },
                      "nodeType": "number",
                      "value": 119.99830467774073,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 180.00089996448756,
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
              },
              {
                "color": "#008000",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#008000",
                      "index(a)": 1,
                      "index(b)": 1,
                    },
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "hsl.h",
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "b",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "hsl.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#008000",
                      "index(a)": 1,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 119.99830467774073,
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "left": LLValueFunction {
                        "input": LLVariable {
                          "nodeType": "variable",
                          "value": "b",
                        },
                        "nodeType": "valueFunction",
                        "params": {},
                        "type": "hsl.h",
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#008000",
                      "index(a)": 1,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "inducedVariables": {
                        "a": "#008000",
                        "b": "#008000",
                        "index(a)": 1,
                        "index(b)": 1,
                      },
                      "nodeType": "number",
                      "value": 119.99830467774073,
                    },
                    "nodeType": "predicate",
                    "right": LLNumberOp {
                      "inducedVariables": {
                        "a": "#008000",
                        "b": "#008000",
                        "index(a)": 1,
                        "index(b)": 1,
                      },
                      "left": LLNumber {
                        "nodeType": "number",
                        "value": 119.99830467774073,
                      },
                      "nodeType": "numberOp",
                      "right": LLNumber {
                        "nodeType": "number",
                        "value": 180,
                      },
                      "type": "+",
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#008000",
                      "index(a)": 1,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "inducedVariables": {
                        "a": "#008000",
                        "b": "#008000",
                        "index(a)": 1,
                        "index(b)": 1,
                      },
                      "nodeType": "number",
                      "value": 119.99830467774073,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 299.99830467774075,
                    },
                    "threshold": 5,
                    "type": "similar",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 27`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.l",
                    },
                    "nodeType": "numberOp",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "y",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.l",
                    },
                    "type": "absDiff",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 12.58,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.a",
                    },
                    "nodeType": "numberOp",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "y",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.a",
                    },
                    "type": "absDiff",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 20.740000000000002,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.b",
                    },
                    "nodeType": "numberOp",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "y",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.b",
                    },
                    "type": "absDiff",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 34.05,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "or",
          },
        },
        "type": "all",
        "varbs": [
          "y",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(x)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(y)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "x",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "index(x)": 0,
              "x": "#f00",
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 12.58,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 54.29054140467191,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.l",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 12.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 0,
                              "index(y)": 1,
                              "x": "#f00",
                              "y": "#008000",
                            },
                            "nodeType": "number",
                            "value": 54.29054140467191,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 46.27770784805982,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 12.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 8.012833556612094,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 12.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 80.80492817043522,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.a",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 20.740000000000002,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 0,
                              "index(y)": 1,
                              "x": "#f00",
                              "y": "#008000",
                            },
                            "nodeType": "number",
                            "value": 80.80492817043522,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": -47.552395089952206,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 20.740000000000002,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 128.35732326038743,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 20.740000000000002,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 69.89096476862429,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.b",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 34.05,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 0,
                              "index(y)": 1,
                              "x": "#f00",
                              "y": "#008000",
                            },
                            "nodeType": "number",
                            "value": 69.89096476862429,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 48.5862848460751,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 34.05,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 21.304679922549184,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 34.05,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLBool {
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "y",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "index(x)": 1,
              "x": "#008000",
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 12.58,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 46.27770784805982,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.l",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 12.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 1,
                              "index(y)": 0,
                              "x": "#008000",
                              "y": "#f00",
                            },
                            "nodeType": "number",
                            "value": 46.27770784805982,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 54.29054140467191,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 12.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 8.012833556612094,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 12.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 20.740000000000002,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": -47.552395089952206,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.a",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 20.740000000000002,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 1,
                              "index(y)": 0,
                              "x": "#008000",
                              "y": "#f00",
                            },
                            "nodeType": "number",
                            "value": -47.552395089952206,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 80.80492817043522,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 20.740000000000002,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 128.35732326038743,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 20.740000000000002,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 34.05,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 48.5862848460751,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.b",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 34.05,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 1,
                              "index(y)": 0,
                              "x": "#008000",
                              "y": "#f00",
                            },
                            "nodeType": "number",
                            "value": 48.5862848460751,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 69.89096476862429,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 34.05,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 21.304679922549184,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 34.05,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": false,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLBool {
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "y",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "x",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 28`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.l",
                    },
                    "nodeType": "numberOp",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "y",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.l",
                    },
                    "type": "absDiff",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 6.58,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.a",
                    },
                    "nodeType": "numberOp",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "y",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.a",
                    },
                    "type": "absDiff",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 8.42,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.b",
                    },
                    "nodeType": "numberOp",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "y",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.b",
                    },
                    "type": "absDiff",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 11.09,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "or",
          },
        },
        "type": "all",
        "varbs": [
          "y",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(x)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(y)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "x",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "index(x)": 0,
              "x": "#f00",
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.58,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 54.29054140467191,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.l",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 0,
                              "index(y)": 1,
                              "x": "#f00",
                              "y": "#008000",
                            },
                            "nodeType": "number",
                            "value": 54.29054140467191,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 46.27770784805982,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 8.012833556612094,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 80.80492817043522,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.a",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.42,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 0,
                              "index(y)": 1,
                              "x": "#f00",
                              "y": "#008000",
                            },
                            "nodeType": "number",
                            "value": 80.80492817043522,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": -47.552395089952206,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.42,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 128.35732326038743,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.42,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 69.89096476862429,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.b",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 11.09,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 0,
                              "index(y)": 1,
                              "x": "#f00",
                              "y": "#008000",
                            },
                            "nodeType": "number",
                            "value": 69.89096476862429,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 48.5862848460751,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 11.09,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 21.304679922549184,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 11.09,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLBool {
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "y",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "index(x)": 1,
              "x": "#008000",
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.58,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 46.27770784805982,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.l",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 1,
                              "index(y)": 0,
                              "x": "#008000",
                              "y": "#f00",
                            },
                            "nodeType": "number",
                            "value": 46.27770784805982,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 54.29054140467191,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 8.012833556612094,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.58,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.42,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": -47.552395089952206,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.a",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.42,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 1,
                              "index(y)": 0,
                              "x": "#008000",
                              "y": "#f00",
                            },
                            "nodeType": "number",
                            "value": -47.552395089952206,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 80.80492817043522,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.42,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 128.35732326038743,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.42,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 11.09,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 48.5862848460751,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.b",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 11.09,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 1,
                              "index(y)": 0,
                              "x": "#008000",
                              "y": "#f00",
                            },
                            "nodeType": "number",
                            "value": 48.5862848460751,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 69.89096476862429,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 11.09,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 21.304679922549184,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 11.09,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLBool {
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "y",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "x",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 29`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLConjunction {
            "children": [
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.l",
                    },
                    "nodeType": "numberOp",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "y",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.l",
                    },
                    "type": "absDiff",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 5.83,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.a",
                    },
                    "nodeType": "numberOp",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "y",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.a",
                    },
                    "type": "absDiff",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 6.88,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
              LLExpression {
                "nodeType": "expression",
                "value": LLPredicate {
                  "left": LLNumberOp {
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "x",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.b",
                    },
                    "nodeType": "numberOp",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "y",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "lab.b",
                    },
                    "type": "absDiff",
                  },
                  "nodeType": "predicate",
                  "right": LLNumber {
                    "nodeType": "number",
                    "value": 8.219999999999999,
                  },
                  "threshold": undefined,
                  "type": ">",
                },
              },
            ],
            "nodeType": "conjunction",
            "type": "or",
          },
        },
        "type": "all",
        "varbs": [
          "y",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(x)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(y)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "x",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "index(x)": 0,
              "x": "#f00",
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 5.83,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 54.29054140467191,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.l",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 5.83,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 0,
                              "index(y)": 1,
                              "x": "#f00",
                              "y": "#008000",
                            },
                            "nodeType": "number",
                            "value": 54.29054140467191,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 46.27770784805982,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 5.83,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 8.012833556612094,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 5.83,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 80.80492817043522,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.a",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.88,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 0,
                              "index(y)": 1,
                              "x": "#f00",
                              "y": "#008000",
                            },
                            "nodeType": "number",
                            "value": 80.80492817043522,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": -47.552395089952206,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.88,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 128.35732326038743,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.88,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 69.89096476862429,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.b",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.219999999999999,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 0,
                            "index(y)": 1,
                            "x": "#f00",
                            "y": "#008000",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 0,
                              "index(y)": 1,
                              "x": "#f00",
                              "y": "#008000",
                            },
                            "nodeType": "number",
                            "value": 69.89096476862429,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 48.5862848460751,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.219999999999999,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 21.304679922549184,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.219999999999999,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 0,
                          "index(y)": 1,
                          "x": "#f00",
                          "y": "#008000",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLBool {
                    "inducedVariables": {
                      "index(x)": 0,
                      "index(y)": 1,
                      "x": "#f00",
                      "y": "#008000",
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "y",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "index(x)": 1,
              "x": "#008000",
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.l",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 5.83,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 46.27770784805982,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.l",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 5.83,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 1,
                              "index(y)": 0,
                              "x": "#008000",
                              "y": "#f00",
                            },
                            "nodeType": "number",
                            "value": 46.27770784805982,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 54.29054140467191,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 5.83,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 8.012833556612094,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 5.83,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.a",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 6.88,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": -47.552395089952206,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.a",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.88,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 1,
                              "index(y)": 0,
                              "x": "#008000",
                              "y": "#f00",
                            },
                            "nodeType": "number",
                            "value": -47.552395089952206,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 80.80492817043522,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.88,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 128.35732326038743,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 6.88,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLNumberOp {
                            "left": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "x",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "nodeType": "numberOp",
                            "right": LLValueFunction {
                              "input": LLVariable {
                                "nodeType": "variable",
                                "value": "y",
                              },
                              "nodeType": "valueFunction",
                              "params": {},
                              "type": "lab.b",
                            },
                            "type": "absDiff",
                          },
                          "nodeType": "predicate",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 8.219999999999999,
                          },
                          "threshold": undefined,
                          "type": ">",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "nodeType": "number",
                            "value": 48.5862848460751,
                          },
                          "nodeType": "numberOp",
                          "right": LLValueFunction {
                            "input": LLVariable {
                              "nodeType": "variable",
                              "value": "y",
                            },
                            "nodeType": "valueFunction",
                            "params": {},
                            "type": "lab.b",
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.219999999999999,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumberOp {
                          "inducedVariables": {
                            "index(x)": 1,
                            "index(y)": 0,
                            "x": "#008000",
                            "y": "#f00",
                          },
                          "left": LLNumber {
                            "inducedVariables": {
                              "index(x)": 1,
                              "index(y)": 0,
                              "x": "#008000",
                              "y": "#f00",
                            },
                            "nodeType": "number",
                            "value": 48.5862848460751,
                          },
                          "nodeType": "numberOp",
                          "right": LLNumber {
                            "nodeType": "number",
                            "value": 69.89096476862429,
                          },
                          "type": "absDiff",
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.219999999999999,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLPredicate {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "left": LLNumber {
                          "nodeType": "number",
                          "value": 21.304679922549184,
                        },
                        "nodeType": "predicate",
                        "right": LLNumber {
                          "nodeType": "number",
                          "value": 8.219999999999999,
                        },
                        "threshold": undefined,
                        "type": ">",
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "inducedVariables": {
                          "index(x)": 1,
                          "index(y)": 0,
                          "x": "#008000",
                          "y": "#f00",
                        },
                        "nodeType": "bool",
                        "value": true,
                      },
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                    ],
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "conjunction",
                    "type": "or",
                  },
                  LLBool {
                    "inducedVariables": {
                      "index(x)": 1,
                      "index(y)": 0,
                      "x": "#008000",
                      "y": "#f00",
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "y",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "x",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 30`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLQuantifier {
          "input": LLValueArray {
            "children": [
              LLColor {
                "constructorString": "#000000",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 0,
                    "a": 0,
                    "b": 0,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
              LLColor {
                "constructorString": "#ffffff",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 100,
                    "a": 0,
                    "b": 0,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
              LLColor {
                "constructorString": "#0000ff",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 29.56830197909668,
                    "a": 68.28736460254686,
                    "b": -112.0297095251052,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
              LLColor {
                "constructorString": "#ff0000",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 54.29054140467191,
                    "a": 80.80492817043522,
                    "b": 69.89096476862429,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
              LLColor {
                "constructorString": "#00ff00",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 87.81853436502792,
                    "a": -79.27106077555146,
                    "b": 80.99458148439912,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
            ],
            "nodeType": "array",
          },
          "nodeType": "quantifier",
          "predicate": LLExpression {
            "nodeType": "expression",
            "value": LLConjunction {
              "children": [
                LLExpression {
                  "nodeType": "expression",
                  "value": LLPredicate {
                    "left": LLVariable {
                      "nodeType": "variable",
                      "value": "a",
                    },
                    "nodeType": "predicate",
                    "right": LLVariable {
                      "nodeType": "variable",
                      "value": "b",
                    },
                    "threshold": undefined,
                    "type": "==",
                  },
                },
              ],
              "nodeType": "conjunction",
              "type": "not",
            },
          },
          "type": "all",
          "varbs": [
            "b",
          ],
          "where": undefined,
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": false,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#000",
                      "index(a)": 0,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#000",
                      "index(a)": 0,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#000",
                      "index(a)": 0,
                      "index(b)": 0,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#fff",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#fff",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#fff",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#fff",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#00f",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#00f",
                      "index(a)": 0,
                      "index(b)": 2,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#00f",
                      "index(a)": 0,
                      "index(b)": 2,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#00f",
                      "index(a)": 0,
                      "index(b)": 2,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#f00",
                      "index(a)": 0,
                      "index(b)": 3,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": true,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#f00",
                      "index(a)": 0,
                      "index(b)": 3,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#f00",
                      "index(a)": 0,
                      "index(b)": 3,
                    },
                    "nodeType": "bool",
                    "value": false,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": false,
                  },
                ],
              },
              {
                "color": "#0f0",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#0f0",
                      "index(a)": 0,
                      "index(b)": 4,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#0f0",
                      "index(a)": 0,
                      "index(b)": 4,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#0f0",
                      "index(a)": 0,
                      "index(b)": 4,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": true,
            "results": [
              {
                "color": "#000",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#000",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#000",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#000",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#fff",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#fff",
                      "index(a)": 1,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#fff",
                      "index(a)": 1,
                      "index(b)": 1,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#fff",
                      "index(a)": 1,
                      "index(b)": 1,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#00f",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#00f",
                      "index(a)": 1,
                      "index(b)": 2,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#00f",
                      "index(a)": 1,
                      "index(b)": 2,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#00f",
                      "index(a)": 1,
                      "index(b)": 2,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#f00",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 3,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 3,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 3,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#0f0",
                "evals": [
                  LLConjunction {
                    "children": [
                      LLExpression {
                        "nodeType": "expression",
                        "value": LLPredicate {
                          "left": LLVariable {
                            "nodeType": "variable",
                            "value": "a",
                          },
                          "nodeType": "predicate",
                          "right": LLVariable {
                            "nodeType": "variable",
                            "value": "b",
                          },
                          "threshold": undefined,
                          "type": "==",
                        },
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#0f0",
                      "index(a)": 1,
                      "index(b)": 4,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLConjunction {
                    "children": [
                      LLBool {
                        "nodeType": "bool",
                        "value": false,
                      },
                    ],
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#0f0",
                      "index(a)": 1,
                      "index(b)": 4,
                    },
                    "nodeType": "conjunction",
                    "type": "not",
                  },
                  LLBool {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#0f0",
                      "index(a)": 1,
                      "index(b)": 4,
                    },
                    "nodeType": "bool",
                    "value": true,
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`Predefined Lint Tests 31`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "algorithm": "2000",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "b",
              },
              "type": "deltaE",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 10,
            },
            "threshold": undefined,
            "type": ">",
          },
        },
        "type": "all",
        "varbs": [
          "b",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(a)",
          },
          "nodeType": "predicate",
          "right": LLNumberOp {
            "left": LLVariable {
              "nodeType": "variable",
              "value": "index(b)",
            },
            "nodeType": "numberOp",
            "right": LLNumber {
              "nodeType": "number",
              "value": 1,
            },
            "type": "-",
          },
          "threshold": undefined,
          "type": "==",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 70.2365636120491,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 32`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "inGamut",
          },
          "nodeType": "predicate",
          "right": LLBool {
            "nodeType": "bool",
            "value": true,
          },
          "threshold": undefined,
          "type": "==",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "inGamut",
            },
            "nodeType": "predicate",
            "right": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "threshold": undefined,
            "type": "==",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "nodeType": "predicate",
            "right": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "threshold": undefined,
            "type": "==",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "inGamut",
            },
            "nodeType": "predicate",
            "right": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "threshold": undefined,
            "type": "==",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "nodeType": "predicate",
            "right": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "threshold": undefined,
            "type": "==",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 33`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLPredicate {
      "inducedVariables": {},
      "left": LLAggregate {
        "children": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "aggregate",
        "type": "count",
      },
      "nodeType": "predicate",
      "right": LLNumber {
        "nodeType": "number",
        "value": 11,
      },
      "threshold": undefined,
      "type": "<",
    },
  },
  LLPredicate {
    "inducedVariables": {},
    "left": LLNumber {
      "nodeType": "number",
      "value": 2,
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 11,
    },
    "threshold": undefined,
    "type": "<",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 34`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "space": "lab",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "b",
              },
              "type": "dist",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 15,
            },
            "threshold": undefined,
            "type": ">",
          },
        },
        "type": "all",
        "varbs": [
          "b",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(a)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(b)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "space": "lab",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "dist",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 15,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 130.35962044667053,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 15,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "space": "lab",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "dist",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 15,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 130.35962044667053,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 15,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 35`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "name",
            },
            "nodeType": "predicate",
            "right": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "b",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "name",
            },
            "threshold": undefined,
            "type": "!=",
          },
        },
        "type": "all",
        "varbs": [
          "b",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(a)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(b)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "didEval": true,
                "result": "WHERE SKIP",
              },
              {
                "color": "#008000",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "name",
                    },
                    "nodeType": "predicate",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "name",
                    },
                    "threshold": undefined,
                    "type": "!=",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLColor {
                      "constructorString": "brightred",
                      "nodeType": "color",
                      "value": CIELAB {
                        "channels": {
                          "L": 0,
                          "a": 0,
                          "b": 0,
                        },
                        "spaceName": "lab",
                        "tags": [],
                      },
                    },
                    "nodeType": "predicate",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "name",
                    },
                    "threshold": undefined,
                    "type": "!=",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#008000",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLColor {
                      "constructorString": "brightred",
                      "inducedVariables": {
                        "a": "#f00",
                        "b": "#008000",
                        "index(a)": 0,
                        "index(b)": 1,
                      },
                      "nodeType": "color",
                      "value": CIELAB {
                        "channels": {
                          "L": 0,
                          "a": 0,
                          "b": 0,
                        },
                        "spaceName": "lab",
                        "tags": [],
                      },
                    },
                    "nodeType": "predicate",
                    "right": LLColor {
                      "constructorString": "green",
                      "nodeType": "color",
                      "value": CIELAB {
                        "channels": {
                          "L": 46.27770784805982,
                          "a": -47.552395089952206,
                          "b": 48.5862848460751,
                        },
                        "spaceName": "lab",
                        "tags": [],
                      },
                    },
                    "threshold": undefined,
                    "type": "!=",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": false,
            "results": [
              {
                "color": "#f00",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "name",
                    },
                    "nodeType": "predicate",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "name",
                    },
                    "threshold": undefined,
                    "type": "!=",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLColor {
                      "constructorString": "green",
                      "nodeType": "color",
                      "value": CIELAB {
                        "channels": {
                          "L": 46.27770784805982,
                          "a": -47.552395089952206,
                          "b": 48.5862848460751,
                        },
                        "spaceName": "lab",
                        "tags": [],
                      },
                    },
                    "nodeType": "predicate",
                    "right": LLValueFunction {
                      "input": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "nodeType": "valueFunction",
                      "params": {},
                      "type": "name",
                    },
                    "threshold": undefined,
                    "type": "!=",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#f00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLColor {
                      "constructorString": "green",
                      "inducedVariables": {
                        "a": "#008000",
                        "b": "#f00",
                        "index(a)": 1,
                        "index(b)": 0,
                      },
                      "nodeType": "color",
                      "value": CIELAB {
                        "channels": {
                          "L": 46.27770784805982,
                          "a": -47.552395089952206,
                          "b": 48.5862848460751,
                        },
                        "spaceName": "lab",
                        "tags": [],
                      },
                    },
                    "nodeType": "predicate",
                    "right": LLColor {
                      "constructorString": "brightred",
                      "nodeType": "color",
                      "value": CIELAB {
                        "channels": {
                          "L": 0,
                          "a": 0,
                          "b": 0,
                        },
                        "spaceName": "lab",
                        "tags": [],
                      },
                    },
                    "threshold": undefined,
                    "type": "!=",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#008000",
                "didEval": true,
                "result": "WHERE SKIP",
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": false,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 36`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLConjunction {
      "children": [
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLMap {
              "children": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "func": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "x",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "lch.l",
              },
              "nodeType": "map",
              "type": "sort",
              "varb": "x",
            },
            "nodeType": "predicate",
            "right": LLMap {
              "children": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "func": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "x",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "lch.l",
              },
              "nodeType": "map",
              "type": "map",
              "varb": "x",
            },
            "threshold": undefined,
            "type": "==",
          },
        },
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLMap {
              "children": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "func": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "x",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "lch.l",
              },
              "nodeType": "map",
              "type": "sort",
              "varb": "x",
            },
            "nodeType": "predicate",
            "right": LLMap {
              "children": LLMap {
                "children": LLVariable {
                  "nodeType": "variable",
                  "value": "colors",
                },
                "func": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "x",
                  },
                  "nodeType": "valueFunction",
                  "params": {},
                  "type": "lch.l",
                },
                "nodeType": "map",
                "type": "map",
                "varb": "x",
              },
              "func": " ",
              "nodeType": "map",
              "type": "reverse",
              "varb": " ",
            },
            "threshold": undefined,
            "type": "==",
          },
        },
      ],
      "inducedVariables": {},
      "nodeType": "conjunction",
      "type": "or",
    },
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLValueArray {
          "children": [
            LLNumber {
              "nodeType": "number",
              "value": 46.278,
            },
            LLNumber {
              "nodeType": "number",
              "value": 54.291,
            },
          ],
          "nodeType": "array",
        },
        "nodeType": "predicate",
        "right": LLMap {
          "children": LLVariable {
            "nodeType": "variable",
            "value": "colors",
          },
          "func": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "x",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "lch.l",
          },
          "nodeType": "map",
          "type": "map",
          "varb": "x",
        },
        "threshold": undefined,
        "type": "==",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLMap {
            "children": LLVariable {
              "nodeType": "variable",
              "value": "colors",
            },
            "func": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "x",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "lch.l",
            },
            "nodeType": "map",
            "type": "sort",
            "varb": "x",
          },
          "nodeType": "predicate",
          "right": LLMap {
            "children": LLMap {
              "children": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "func": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "x",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "lch.l",
              },
              "nodeType": "map",
              "type": "map",
              "varb": "x",
            },
            "func": " ",
            "nodeType": "map",
            "type": "reverse",
            "varb": " ",
          },
          "threshold": undefined,
          "type": "==",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLPredicate {
        "inducedVariables": {},
        "left": LLValueArray {
          "children": [
            LLNumber {
              "nodeType": "number",
              "value": 46.278,
            },
            LLNumber {
              "nodeType": "number",
              "value": 54.291,
            },
          ],
          "inducedVariables": {},
          "nodeType": "array",
        },
        "nodeType": "predicate",
        "right": LLValueArray {
          "children": [
            LLNumber {
              "nodeType": "number",
              "value": 54.291,
            },
            LLNumber {
              "nodeType": "number",
              "value": 46.278,
            },
          ],
          "nodeType": "array",
        },
        "threshold": undefined,
        "type": "==",
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLMap {
            "children": LLVariable {
              "nodeType": "variable",
              "value": "colors",
            },
            "func": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "x",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "lch.l",
            },
            "nodeType": "map",
            "type": "sort",
            "varb": "x",
          },
          "nodeType": "predicate",
          "right": LLMap {
            "children": LLMap {
              "children": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "func": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "x",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "lch.l",
              },
              "nodeType": "map",
              "type": "map",
              "varb": "x",
            },
            "func": " ",
            "nodeType": "map",
            "type": "reverse",
            "varb": " ",
          },
          "threshold": undefined,
          "type": "==",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "nodeType": "bool",
        "value": false,
      },
      LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLMap {
            "children": LLVariable {
              "nodeType": "variable",
              "value": "colors",
            },
            "func": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "x",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "lch.l",
            },
            "nodeType": "map",
            "type": "sort",
            "varb": "x",
          },
          "nodeType": "predicate",
          "right": LLMap {
            "children": LLMap {
              "children": LLVariable {
                "nodeType": "variable",
                "value": "colors",
              },
              "func": LLValueFunction {
                "input": LLVariable {
                  "nodeType": "variable",
                  "value": "x",
                },
                "nodeType": "valueFunction",
                "params": {},
                "type": "lch.l",
              },
              "nodeType": "map",
              "type": "map",
              "varb": "x",
            },
            "func": " ",
            "nodeType": "map",
            "type": "reverse",
            "varb": " ",
          },
          "threshold": undefined,
          "type": "==",
        },
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": false,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLValueArray {
          "children": [
            LLNumber {
              "nodeType": "number",
              "value": 46.278,
            },
            LLNumber {
              "nodeType": "number",
              "value": 54.291,
            },
          ],
          "nodeType": "array",
        },
        "nodeType": "predicate",
        "right": LLMap {
          "children": LLMap {
            "children": LLVariable {
              "nodeType": "variable",
              "value": "colors",
            },
            "func": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "x",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "lch.l",
            },
            "nodeType": "map",
            "type": "map",
            "varb": "x",
          },
          "func": " ",
          "nodeType": "map",
          "type": "reverse",
          "varb": " ",
        },
        "threshold": undefined,
        "type": "==",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": false,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLValueArray {
          "children": [
            LLNumber {
              "nodeType": "number",
              "value": 46.278,
            },
            LLNumber {
              "nodeType": "number",
              "value": 54.291,
            },
          ],
          "inducedVariables": {},
          "nodeType": "array",
        },
        "nodeType": "predicate",
        "right": LLMap {
          "children": LLValueArray {
            "children": [
              LLNumber {
                "nodeType": "number",
                "value": 54.291,
              },
              LLNumber {
                "nodeType": "number",
                "value": 46.278,
              },
            ],
            "nodeType": "array",
          },
          "func": " ",
          "inducedVariables": {},
          "nodeType": "map",
          "type": "reverse",
          "varb": " ",
        },
        "threshold": undefined,
        "type": "==",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": false,
      },
      LLPredicate {
        "inducedVariables": {},
        "left": LLValueArray {
          "children": [
            LLNumber {
              "nodeType": "number",
              "value": 46.278,
            },
            LLNumber {
              "nodeType": "number",
              "value": 54.291,
            },
          ],
          "inducedVariables": {},
          "nodeType": "array",
        },
        "nodeType": "predicate",
        "right": LLValueArray {
          "children": [
            LLNumber {
              "nodeType": "number",
              "value": 46.278,
            },
            LLNumber {
              "nodeType": "number",
              "value": 54.291,
            },
          ],
          "nodeType": "array",
        },
        "threshold": undefined,
        "type": "==",
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLConjunction {
    "children": [
      LLBool {
        "inducedVariables": {},
        "nodeType": "bool",
        "value": false,
      },
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "or",
  },
  LLBool {
    "inducedVariables": {},
    "nodeType": "bool",
    "value": true,
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Predefined Lint Tests 37`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLQuantifier {
          "input": LLValueArray {
            "children": [
              LLColor {
                "constructorString": "#56FF00",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 88.80855207585363,
                    "a": -71.03564242099353,
                    "b": 82.2674188617345,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
              LLColor {
                "constructorString": "#0010FF",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 30.48066620572758,
                    "a": 65.57977901735848,
                    "b": -110.5014106371934,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
              LLColor {
                "constructorString": "#6A7E25",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 49.828946080691466,
                    "a": -17.342733017047863,
                    "b": 43.4347809893102,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
              LLColor {
                "constructorString": "#FF00EF",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 59.41762268381204,
                    "a": 91.96952511995771,
                    "b": -52.79801861489515,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
              LLColor {
                "constructorString": "#806E28",
                "nodeType": "color",
                "value": CIELAB {
                  "channels": {
                    "L": 47.11787993456628,
                    "a": 1.091390633360667,
                    "b": 40.22413212655407,
                  },
                  "spaceName": "lab",
                  "tags": [],
                },
              },
            ],
            "nodeType": "array",
          },
          "nodeType": "quantifier",
          "predicate": LLExpression {
            "nodeType": "expression",
            "value": LLPredicate {
              "left": LLPairFunction {
                "left": LLVariable {
                  "nodeType": "variable",
                  "value": "a",
                },
                "nodeType": "pairFunction",
                "params": {
                  "algorithm": "2000",
                },
                "right": LLVariable {
                  "nodeType": "variable",
                  "value": "b",
                },
                "type": "deltaE",
              },
              "nodeType": "predicate",
              "right": LLNumber {
                "nodeType": "number",
                "value": 10,
              },
              "threshold": undefined,
              "type": ">",
            },
          },
          "type": "all",
          "varbs": [
            "b",
          ],
          "where": undefined,
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "quant": "all",
            "quantifierResult": true,
            "results": [
              {
                "color": "#56ff00",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#56ff00",
                      "index(a)": 0,
                      "index(b)": 0,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#56ff00",
                      "index(a)": 0,
                      "index(b)": 0,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 81.96024015892263,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#0010ff",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#0010ff",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#0010ff",
                      "index(a)": 0,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 55.578042926085416,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#6a7e25",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#6a7e25",
                      "index(a)": 0,
                      "index(b)": 2,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#6a7e25",
                      "index(a)": 0,
                      "index(b)": 2,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 51.207348394145434,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#ff00ef",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#ff00ef",
                      "index(a)": 0,
                      "index(b)": 3,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#ff00ef",
                      "index(a)": 0,
                      "index(b)": 3,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 41.93026640022255,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#806e28",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#806e28",
                      "index(a)": 0,
                      "index(b)": 4,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#f00",
                      "b": "#806e28",
                      "index(a)": 0,
                      "index(b)": 4,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 36.109770572886795,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "quant": "all",
            "quantifierResult": true,
            "results": [
              {
                "color": "#56ff00",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#56ff00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#56ff00",
                      "index(a)": 1,
                      "index(b)": 0,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 34.91821959880964,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#0010ff",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#0010ff",
                      "index(a)": 1,
                      "index(b)": 1,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#0010ff",
                      "index(a)": 1,
                      "index(b)": 1,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 63.783495328038846,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#6a7e25",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#6a7e25",
                      "index(a)": 1,
                      "index(b)": 2,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#6a7e25",
                      "index(a)": 1,
                      "index(b)": 2,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 13.077667172407066,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#ff00ef",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#ff00ef",
                      "index(a)": 1,
                      "index(b)": 3,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#ff00ef",
                      "index(a)": 1,
                      "index(b)": 3,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 92.69890205518254,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
              {
                "color": "#806e28",
                "evals": [
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#806e28",
                      "index(a)": 1,
                      "index(b)": 4,
                    },
                    "left": LLPairFunction {
                      "left": LLVariable {
                        "nodeType": "variable",
                        "value": "a",
                      },
                      "nodeType": "pairFunction",
                      "params": {
                        "algorithm": "2000",
                      },
                      "right": LLVariable {
                        "nodeType": "variable",
                        "value": "b",
                      },
                      "type": "deltaE",
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLPredicate {
                    "inducedVariables": {
                      "a": "#008000",
                      "b": "#806e28",
                      "index(a)": 1,
                      "index(b)": 4,
                    },
                    "left": LLNumber {
                      "nodeType": "number",
                      "value": 24.806478502421456,
                    },
                    "nodeType": "predicate",
                    "right": LLNumber {
                      "nodeType": "number",
                      "value": 10,
                    },
                    "threshold": undefined,
                    "type": ">",
                  },
                  LLBool {
                    "nodeType": "bool",
                    "value": true,
                  },
                ],
              },
            ],
            "varb": "b",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Quantifier Rewrite Test 1 1`] = `
LLExpression {
  "nodeType": "expression",
  "value": LLQuantifier {
    "input": LLVariable {
      "nodeType": "variable",
      "value": "colors",
    },
    "nodeType": "quantifier",
    "predicate": LLQuantifier {
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLConjunction {
          "children": [
            LLExpression {
              "nodeType": "expression",
              "value": LLPredicate {
                "left": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "a",
                  },
                  "nodeType": "valueFunction",
                  "params": {
                    "type": "deuteranopia",
                  },
                  "type": "cvdSim",
                },
                "nodeType": "predicate",
                "right": LLValueFunction {
                  "input": LLVariable {
                    "nodeType": "variable",
                    "value": "b",
                  },
                  "nodeType": "valueFunction",
                  "params": {
                    "type": "deuteranopia",
                  },
                  "type": "cvdSim",
                },
                "threshold": 9,
                "type": "similar",
              },
            },
          ],
          "nodeType": "conjunction",
          "type": "not",
        },
      },
      "type": "all",
      "varbs": [
        "b",
      ],
      "where": LLPredicate {
        "left": LLVariable {
          "nodeType": "variable",
          "value": "index(a)",
        },
        "nodeType": "predicate",
        "right": LLVariable {
          "nodeType": "variable",
          "value": "index(b)",
        },
        "threshold": undefined,
        "type": "!=",
      },
    },
    "type": "all",
    "varbs": [
      "a",
    ],
    "where": undefined,
  },
}
`;

exports[`Quantifier Rewrite Test 3 1`] = `
LLExpression {
  "nodeType": "expression",
  "value": LLQuantifier {
    "input": LLVariable {
      "nodeType": "variable",
      "value": "colors",
    },
    "nodeType": "quantifier",
    "predicate": LLQuantifier {
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLQuantifier {
        "input": LLVariable {
          "nodeType": "variable",
          "value": "colors",
        },
        "nodeType": "quantifier",
        "predicate": LLExpression {
          "nodeType": "expression",
          "value": LLBool {
            "nodeType": "bool",
            "value": true,
          },
        },
        "type": "all",
        "varbs": [
          "c",
        ],
        "where": LLPredicate {
          "left": LLVariable {
            "nodeType": "variable",
            "value": "index(a)",
          },
          "nodeType": "predicate",
          "right": LLVariable {
            "nodeType": "variable",
            "value": "index(b)",
          },
          "threshold": undefined,
          "type": "!=",
        },
      },
      "type": "all",
      "varbs": [
        "b",
      ],
      "where": undefined,
    },
    "type": "all",
    "varbs": [
      "a",
    ],
    "where": undefined,
  },
}
`;

exports[`Quantifier Test 1`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLPairFunction {
            "left": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "pairFunction",
            "params": {
              "algorithm": "WCAG21",
            },
            "right": LLVariable {
              "nodeType": "variable",
              "value": "background",
            },
            "type": "contrast",
          },
          "nodeType": "predicate",
          "right": LLNumber {
            "nodeType": "number",
            "value": 3,
          },
          "threshold": undefined,
          "type": ">",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "algorithm": "WCAG21",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "background",
              },
              "type": "contrast",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 3,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLNumber {
              "nodeType": "number",
              "value": 3.997818803850546,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 3,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLPairFunction {
              "left": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "pairFunction",
              "params": {
                "algorithm": "WCAG21",
              },
              "right": LLVariable {
                "nodeType": "variable",
                "value": "background",
              },
              "type": "contrast",
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 3,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLNumber {
              "nodeType": "number",
              "value": 5.137518325903408,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 3,
            },
            "threshold": undefined,
            "type": ">",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`Quantifier Test 2 1`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLQuantifier {
      "inducedVariables": {},
      "input": LLVariable {
        "nodeType": "variable",
        "value": "colors",
      },
      "nodeType": "quantifier",
      "predicate": LLExpression {
        "nodeType": "expression",
        "value": LLPredicate {
          "left": LLValueFunction {
            "input": LLVariable {
              "nodeType": "variable",
              "value": "a",
            },
            "nodeType": "valueFunction",
            "params": {},
            "type": "inGamut",
          },
          "nodeType": "predicate",
          "right": LLBool {
            "nodeType": "bool",
            "value": true,
          },
          "threshold": undefined,
          "type": "==",
        },
      },
      "type": "all",
      "varbs": [
        "a",
      ],
      "where": undefined,
    },
  },
  {
    "inducedVariables": {},
    "quant": "all",
    "quantifierResult": true,
    "results": [
      {
        "color": "#f00",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "inGamut",
            },
            "nodeType": "predicate",
            "right": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "threshold": undefined,
            "type": "==",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#f00",
              "index(a)": 0,
            },
            "left": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "nodeType": "predicate",
            "right": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "threshold": undefined,
            "type": "==",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
      {
        "color": "#008000",
        "evals": [
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLValueFunction {
              "input": LLVariable {
                "nodeType": "variable",
                "value": "a",
              },
              "nodeType": "valueFunction",
              "params": {},
              "type": "inGamut",
            },
            "nodeType": "predicate",
            "right": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "threshold": undefined,
            "type": "==",
          },
          LLPredicate {
            "inducedVariables": {
              "a": "#008000",
              "index(a)": 1,
            },
            "left": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "nodeType": "predicate",
            "right": LLBool {
              "nodeType": "bool",
              "value": true,
            },
            "threshold": undefined,
            "type": "==",
          },
          LLBool {
            "nodeType": "bool",
            "value": true,
          },
        ],
      },
    ],
    "varb": "a",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`SmallStepEvaluator works 1`] = `
[
  LLExpression {
    "inducedVariables": {
      "a": "#f00",
      "b": "#008000",
    },
    "nodeType": "expression",
    "value": LLPredicate {
      "inducedVariables": {
        "a": "#f00",
        "b": "#008000",
      },
      "left": LLPairFunction {
        "left": LLVariable {
          "nodeType": "variable",
          "value": "a",
        },
        "nodeType": "pairFunction",
        "params": {
          "algorithm": "2000",
        },
        "right": LLVariable {
          "nodeType": "variable",
          "value": "b",
        },
        "type": "deltaE",
      },
      "nodeType": "predicate",
      "right": LLNumber {
        "nodeType": "number",
        "value": 10,
      },
      "threshold": undefined,
      "type": ">",
    },
  },
  LLPredicate {
    "inducedVariables": {
      "a": "#f00",
      "b": "#008000",
    },
    "left": LLNumber {
      "nodeType": "number",
      "value": 70.2365636120491,
    },
    "nodeType": "predicate",
    "right": LLNumber {
      "nodeType": "number",
      "value": 10,
    },
    "threshold": undefined,
    "type": ">",
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;

exports[`SmallStepEvaluator works with small not example 1`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLConjunction {
      "children": [
        LLExpression {
          "nodeType": "expression",
          "value": LLPredicate {
            "left": LLNumber {
              "nodeType": "number",
              "value": 11,
            },
            "nodeType": "predicate",
            "right": LLNumber {
              "nodeType": "number",
              "value": 10,
            },
            "threshold": undefined,
            "type": ">",
          },
        },
      ],
      "inducedVariables": {},
      "nodeType": "conjunction",
      "type": "not",
    },
  },
  LLConjunction {
    "children": [
      LLBool {
        "nodeType": "bool",
        "value": true,
      },
    ],
    "inducedVariables": {},
    "nodeType": "conjunction",
    "type": "not",
  },
  LLBool {
    "inducedVariables": {},
    "nodeType": "bool",
    "value": false,
  },
  LLBool {
    "nodeType": "bool",
    "value": false,
  },
]
`;

exports[`SmallStepEvaluator works with smaller example 1`] = `
[
  LLExpression {
    "inducedVariables": {},
    "nodeType": "expression",
    "value": LLPredicate {
      "inducedVariables": {},
      "left": LLNumber {
        "nodeType": "number",
        "value": 11,
      },
      "nodeType": "predicate",
      "right": LLNumber {
        "nodeType": "number",
        "value": 10,
      },
      "threshold": undefined,
      "type": ">",
    },
  },
  LLBool {
    "nodeType": "bool",
    "value": true,
  },
]
`;
